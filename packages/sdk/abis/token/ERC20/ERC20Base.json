{
  "abi": [
    {
      "inputs": [],
      "name": "ECDSA__InvalidS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSA__InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ECDSA__InvalidV",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC165Base__InvalidInterfaceId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__ApproveFromZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__ApproveToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__BurnExceedsBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__BurnFromZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__TransferExceedsBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__TransferFromZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Base__TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Extended__ExcessiveAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Extended__InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Permit__ExpiredDeadline",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20Permit__InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "domainSeparator",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611c85806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80637ecebe00116100c3578063ac9650d81161007c578063ac9650d8146102af578063d505accf146102cf578063d72bdc53146102e2578063dd62ed3e146102f5578063e8a3d48514610308578063f2fde38b1461031057600080fd5b80637ecebe001461023b5780638da5cb5b1461024e578063938e3d7b1461026e57806395d89b4114610281578063a457c2d714610289578063a9059cbb1461029c57600080fd5b8063313ce56711610115578063313ce567146101cb5780633644e515146101e557806339509351146101ed57806342966c6814610200578063449a52f81461021557806370a082311461022857600080fd5b806301ffc9a71461015257806306fdde031461017a578063095ea7b31461018f57806318160ddd146101a257806323b872dd146101b8575b600080fd5b6101656101603660046115be565b610323565b60405190151581526020015b60405180910390f35b610182610366565b604051610171919061162e565b61016561019d36600461165d565b610375565b6101aa610389565b604051908152602001610171565b6101656101c6366004611687565b6103b3565b6101d36103c8565b60405160ff9091168152602001610171565b6101aa6103f5565b6101656101fb36600461165d565b6103ff565b61021361020e3660046116c3565b61040b565b005b61021361022336600461165d565b61046a565b6101aa6102363660046116dc565b610513565b6101aa6102493660046116dc565b61051e565b610256610529565b6040516001600160a01b039091168152602001610171565b61021361027c36600461179a565b610533565b610182610581565b61016561029736600461165d565b61058b565b6101656102aa36600461165d565b610597565b6102c26102bd3660046117cf565b6105a4565b6040516101719190611844565b6102136102dd3660046118b7565b6106bf565b6102136102f0366004611921565b6106d7565b6101aa6103033660046119ae565b6108b7565b6101826108c3565b61021361031e3660046116dc565b6108cd565b6001600160e01b0319811660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8602052604081205460ff165b92915050565b606061037061090f565b905090565b60006103823384846109c1565b9392505050565b60006103707fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b65490565b60006103c0848484610a96565b949350505050565b60006103707f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f7430495460ff1690565b6000610370610ab9565b60006103828383610afb565b8061041533610b3a565b101561045d5760405162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f7567682062616c616e636560701b60448201526064015b60405180910390fd5b6104673382610b6b565b50565b610472610c59565b6104be5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e0000000000000000006044820152606401610454565b806000036105055760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b6044820152606401610454565b61050f8282610c7c565b5050565b600061036082610b3a565b600061036082610d5e565b6000610370610d86565b61053b610db4565b6105785760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610454565b61046781610dbe565b6060610370610ebf565b60006103828383610ef0565b6000610382338484610f06565b60608167ffffffffffffffff8111156105bf576105bf6116f7565b6040519080825280602002602001820160405280156105f257816020015b60608152602001906001900390816105dd5790505b50905060005b828110156106b85760008030868685818110610616576106166119e1565b905060200281019061062891906119f7565b604051610636929190611a45565b600060405180830381855af49150503d8060008114610671576040519150601f19603f3d011682016040523d82523d6000602084013e610676565b606091505b509150915081156106a45780848481518110610694576106946119e1565b60200260200101819052506106ae565b3d6000803e3d6000fd5b50506001016105f8565b5092915050565b6106ce87878787878787611037565b50505050505050565b600080516020611c1083398151915254610100900460ff161580801561071857506001610713600080516020611c108339815191525460ff1690565b60ff16105b806107425750303b1580156107425750600080516020611c108339815191525460ff1660ff166001145b6107a55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610454565b600080516020611c10833981519152805460ff1916600117905580156107cf576107cf60016111d7565b6107d8866111fe565b6107e185611278565b6107ea846112a3565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f743049805460ff191660ff85161790556108223383610c7c565b6108346301ffc9a760e01b60016112ce565b6108466336372b0760e01b60016112ce565b610858634ec7fbed60e11b60016112ce565b61086a633d96f4ff60e11b60016112ce565b80156108af5761087a60006111d7565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60006103828383611344565b606061037061138e565b6108d5610d86565b6001600160a01b0316336001600160a01b03161461090657604051632f7a8ee160e01b815260040160405180910390fd5b610467816113b6565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f7430475b805461093e90611a55565b80601f016020809104026020016040519081016040528092919081815260200182805461096a90611a55565b80156109b75780601f1061098c576101008083540402835291602001916109b7565b820191906000526020600020905b81548152906001019060200180831161099a57829003601f168201915b5050505050905090565b60006001600160a01b0384166109ea57604051635a68b7ab60e01b815260040160405180910390fd5b6001600160a01b038316610a10576040516262920b60e91b815260040160405180910390fd5b6001600160a01b0384811660008181527fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b56020908152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b6000610aa38433846113bf565b610aae848484610f06565b506001949350505050565b4660009081527fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeba602052604081205490819003610af857610370611401565b90565b600080610b083385611344565b9050828101811115610b2d5760405163d256efb160e01b815260040160405180910390fd5b6103c033858584016109c1565b6000600080516020611c308339815191525b6001600160a01b03909216600090815260209290925250604090205490565b6001600160a01b038216610b92576040516378f1627760e11b815260040160405180910390fd5b6001600160a01b0382166000908152600080516020611c30833981519152602081905260409091205480831115610bdc5760405163b1d35b2360e01b815260040160405180910390fd5b6001600160a01b03841660009081526020839052604081208483039055600283018054859290610c0d908490611aa5565b90915550506040518381526000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6000610c63610529565b6001600160a01b0316336001600160a01b031614905090565b6001600160a01b038216610ca35760405163da007acd60e01b815260040160405180910390fd5b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b68054600080516020611c30833981519152918391600090610ce6908490611ab8565b90915550506001600160a01b03831660009081526020829052604081208054849290610d13908490611ab8565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60007fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeb9610b4c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b6000610c63610d86565b7f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd80546000908290610def90611a55565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1b90611a55565b8015610e685780601f10610e3d57610100808354040283529160200191610e68565b820191906000526020600020905b815481529060010190602001808311610e4b57829003601f168201915b5050505050905082826000019081610e809190611b11565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168184604051610eb2929190611bd1565b60405180910390a1505050565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f743047600101805461093e90611a55565b6000610efd3384846113bf565b50600192915050565b60006001600160a01b038416610f2f576040516368551d5f60e01b815260040160405180910390fd5b6001600160a01b038316610f56576040516320a2645160e21b815260040160405180910390fd5b6001600160a01b0384166000908152600080516020611c30833981519152602081905260409091205480841115610fa057604051637183160b60e01b815260040160405180910390fd5b6001600160a01b03808716600090815260208490526040808220878503905591871681529081208054869290610fd7908490611ab8565b92505081905550846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405161102391815260200190565b60405180910390a350600195945050505050565b834211156110585760405163384f7ce560e21b815260040160405180910390fd5b6001600160a01b03871660009081527fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeb9602081815260408084205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981528084018d90528083018c9052606081018b90526080810182905260a081018a905260c090204686527fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeba909352908420549293919290918190036111345761111d611401565b466000908152600186016020526040902081905590505b60405161190160f01b8152600281018290526022810184905260429020600061115f828a8a8a6114b4565b90508c6001600160a01b0316816001600160a01b03161461119357604051637570072b60e11b815260040160405180910390fd5b6001600160a01b038d1660009081526020879052604081208054916111b783611bf6565b91905055506111c78d8d8d6109c1565b5050505050505050505050505050565b600080516020611c1083398151915280549115156101000261ff0019909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304761050f8282611b11565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304861050f8282611b11565b6001600160e01b031980831690036112f95760405163b0a19dd560e01b815260040160405180910390fd5b6001600160e01b03199190911660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d860205260409020805460ff1916911515919091179055565b6001600160a01b0391821660009081527fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b56020908152604080832093909416825291909152205490565b60607f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd610933565b610467816111fe565b60006113cb8484611344565b9050808211156113ed5760405162e14ccf60e11b815260040160405180910390fd5b6113fa84848484036109c1565b5050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61142c61090f565b80516020918201206040805180820190915260018152603160f81b9201919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156114f75760405163e4a61add60e01b815260040160405180910390fd5b8360ff16601b1415801561150f57508360ff16601c14155b1561152d57604051630acd54a960e41b815260040160405180910390fd5b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611581573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115b5576040516347f3b32760e11b815260040160405180910390fd5b95945050505050565b6000602082840312156115d057600080fd5b81356001600160e01b03198116811461038257600080fd5b6000815180845260005b8181101561160e576020818501810151868301820152016115f2565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061038260208301846115e8565b80356001600160a01b038116811461165857600080fd5b919050565b6000806040838503121561167057600080fd5b61167983611641565b946020939093013593505050565b60008060006060848603121561169c57600080fd5b6116a584611641565b92506116b360208501611641565b9150604084013590509250925092565b6000602082840312156116d557600080fd5b5035919050565b6000602082840312156116ee57600080fd5b61038282611641565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261171e57600080fd5b813567ffffffffffffffff80821115611739576117396116f7565b604051601f8301601f19908116603f01168101908282118183101715611761576117616116f7565b8160405283815286602085880101111561177a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156117ac57600080fd5b813567ffffffffffffffff8111156117c357600080fd5b6103c08482850161170d565b600080602083850312156117e257600080fd5b823567ffffffffffffffff808211156117fa57600080fd5b818501915085601f83011261180e57600080fd5b81358181111561181d57600080fd5b8660208260051b850101111561183257600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561189957603f198886030184526118878583516115e8565b9450928501929085019060010161186b565b5092979650505050505050565b803560ff8116811461165857600080fd5b600080600080600080600060e0888a0312156118d257600080fd5b6118db88611641565b96506118e960208901611641565b95506040880135945060608801359350611905608089016118a6565b925060a0880135915060c0880135905092959891949750929550565b600080600080600060a0868803121561193957600080fd5b61194286611641565b9450602086013567ffffffffffffffff8082111561195f57600080fd5b61196b89838a0161170d565b9550604088013591508082111561198157600080fd5b5061198e8882890161170d565b93505061199d606087016118a6565b949793965091946080013592915050565b600080604083850312156119c157600080fd5b6119ca83611641565b91506119d860208401611641565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611a0e57600080fd5b83018035915067ffffffffffffffff821115611a2957600080fd5b602001915036819003821315611a3e57600080fd5b9250929050565b8183823760009101908152919050565b600181811c90821680611a6957607f821691505b602082108103611a8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561036057610360611a8f565b8082018082111561036057610360611a8f565b601f8211156114af57600081815260208120601f850160051c81016020861015611af25750805b601f850160051c820191505b818110156108af57828155600101611afe565b815167ffffffffffffffff811115611b2b57611b2b6116f7565b611b3f81611b398454611a55565b84611acb565b602080601f831160018114611b745760008415611b5c5750858301515b600019600386901b1c1916600185901b1785556108af565b600085815260208120601f198616915b82811015611ba357888601518255948401946001909101908401611b84565b5085821015611bc15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611be460408301856115e8565b82810360208401526115b581856115e8565b600060018201611c0857611c08611a8f565b506001019056fe57273313c8845d368ba3ea905aa1935a070969a02baf31b3abd35b1dbe87cdf4c991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b4a26469706673582212200dd59a76a4a82271117ab0530090907c368963bddd1c092cf5d4b32223067adb64736f6c63430008100033",
    "sourceMap": "1573:2399:155:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80637ecebe00116100c3578063ac9650d81161007c578063ac9650d8146102af578063d505accf146102cf578063d72bdc53146102e2578063dd62ed3e146102f5578063e8a3d48514610308578063f2fde38b1461031057600080fd5b80637ecebe001461023b5780638da5cb5b1461024e578063938e3d7b1461026e57806395d89b4114610281578063a457c2d714610289578063a9059cbb1461029c57600080fd5b8063313ce56711610115578063313ce567146101cb5780633644e515146101e557806339509351146101ed57806342966c6814610200578063449a52f81461021557806370a082311461022857600080fd5b806301ffc9a71461015257806306fdde031461017a578063095ea7b31461018f57806318160ddd146101a257806323b872dd146101b8575b600080fd5b6101656101603660046115be565b610323565b60405190151581526020015b60405180910390f35b610182610366565b604051610171919061162e565b61016561019d36600461165d565b610375565b6101aa610389565b604051908152602001610171565b6101656101c6366004611687565b6103b3565b6101d36103c8565b60405160ff9091168152602001610171565b6101aa6103f5565b6101656101fb36600461165d565b6103ff565b61021361020e3660046116c3565b61040b565b005b61021361022336600461165d565b61046a565b6101aa6102363660046116dc565b610513565b6101aa6102493660046116dc565b61051e565b610256610529565b6040516001600160a01b039091168152602001610171565b61021361027c36600461179a565b610533565b610182610581565b61016561029736600461165d565b61058b565b6101656102aa36600461165d565b610597565b6102c26102bd3660046117cf565b6105a4565b6040516101719190611844565b6102136102dd3660046118b7565b6106bf565b6102136102f0366004611921565b6106d7565b6101aa6103033660046119ae565b6108b7565b6101826108c3565b61021361031e3660046116dc565b6108cd565b6001600160e01b0319811660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8602052604081205460ff165b92915050565b606061037061090f565b905090565b60006103823384846109c1565b9392505050565b60006103707fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b65490565b60006103c0848484610a96565b949350505050565b60006103707f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f7430495460ff1690565b6000610370610ab9565b60006103828383610afb565b8061041533610b3a565b101561045d5760405162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f7567682062616c616e636560701b60448201526064015b60405180910390fd5b6104673382610b6b565b50565b610472610c59565b6104be5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420617574686f72697a656420746f206d696e742e0000000000000000006044820152606401610454565b806000036105055760405162461bcd60e51b815260206004820152601460248201527326b4b73a34b733903d32b937903a37b5b2b7399760611b6044820152606401610454565b61050f8282610c7c565b5050565b600061036082610b3a565b600061036082610d5e565b6000610370610d86565b61053b610db4565b6105785760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610454565b61046781610dbe565b6060610370610ebf565b60006103828383610ef0565b6000610382338484610f06565b60608167ffffffffffffffff8111156105bf576105bf6116f7565b6040519080825280602002602001820160405280156105f257816020015b60608152602001906001900390816105dd5790505b50905060005b828110156106b85760008030868685818110610616576106166119e1565b905060200281019061062891906119f7565b604051610636929190611a45565b600060405180830381855af49150503d8060008114610671576040519150601f19603f3d011682016040523d82523d6000602084013e610676565b606091505b509150915081156106a45780848481518110610694576106946119e1565b60200260200101819052506106ae565b3d6000803e3d6000fd5b50506001016105f8565b5092915050565b6106ce87878787878787611037565b50505050505050565b600080516020611c1083398151915254610100900460ff161580801561071857506001610713600080516020611c108339815191525460ff1690565b60ff16105b806107425750303b1580156107425750600080516020611c108339815191525460ff1660ff166001145b6107a55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610454565b600080516020611c10833981519152805460ff1916600117905580156107cf576107cf60016111d7565b6107d8866111fe565b6107e185611278565b6107ea846112a3565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f743049805460ff191660ff85161790556108223383610c7c565b6108346301ffc9a760e01b60016112ce565b6108466336372b0760e01b60016112ce565b610858634ec7fbed60e11b60016112ce565b61086a633d96f4ff60e11b60016112ce565b80156108af5761087a60006111d7565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60006103828383611344565b606061037061138e565b6108d5610d86565b6001600160a01b0316336001600160a01b03161461090657604051632f7a8ee160e01b815260040160405180910390fd5b610467816113b6565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f7430475b805461093e90611a55565b80601f016020809104026020016040519081016040528092919081815260200182805461096a90611a55565b80156109b75780601f1061098c576101008083540402835291602001916109b7565b820191906000526020600020905b81548152906001019060200180831161099a57829003601f168201915b5050505050905090565b60006001600160a01b0384166109ea57604051635a68b7ab60e01b815260040160405180910390fd5b6001600160a01b038316610a10576040516262920b60e91b815260040160405180910390fd5b6001600160a01b0384811660008181527fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b56020908152604080832094881680845294825291829020869055815186815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a35060019392505050565b6000610aa38433846113bf565b610aae848484610f06565b506001949350505050565b4660009081527fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeba602052604081205490819003610af857610370611401565b90565b600080610b083385611344565b9050828101811115610b2d5760405163d256efb160e01b815260040160405180910390fd5b6103c033858584016109c1565b6000600080516020611c308339815191525b6001600160a01b03909216600090815260209290925250604090205490565b6001600160a01b038216610b92576040516378f1627760e11b815260040160405180910390fd5b6001600160a01b0382166000908152600080516020611c30833981519152602081905260409091205480831115610bdc5760405163b1d35b2360e01b815260040160405180910390fd5b6001600160a01b03841660009081526020839052604081208483039055600283018054859290610c0d908490611aa5565b90915550506040518381526000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350505050565b6000610c63610529565b6001600160a01b0316336001600160a01b031614905090565b6001600160a01b038216610ca35760405163da007acd60e01b815260040160405180910390fd5b7fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b68054600080516020611c30833981519152918391600090610ce6908490611ab8565b90915550506001600160a01b03831660009081526020829052604081208054849290610d13908490611ab8565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60007fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeb9610b4c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460546001600160a01b031690565b6000610c63610d86565b7f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd80546000908290610def90611a55565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1b90611a55565b8015610e685780601f10610e3d57610100808354040283529160200191610e68565b820191906000526020600020905b815481529060010190602001808311610e4b57829003601f168201915b5050505050905082826000019081610e809190611b11565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168184604051610eb2929190611bd1565b60405180910390a1505050565b60607f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f743047600101805461093e90611a55565b6000610efd3384846113bf565b50600192915050565b60006001600160a01b038416610f2f576040516368551d5f60e01b815260040160405180910390fd5b6001600160a01b038316610f56576040516320a2645160e21b815260040160405180910390fd5b6001600160a01b0384166000908152600080516020611c30833981519152602081905260409091205480841115610fa057604051637183160b60e01b815260040160405180910390fd5b6001600160a01b03808716600090815260208490526040808220878503905591871681529081208054869290610fd7908490611ab8565b92505081905550846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8660405161102391815260200190565b60405180910390a350600195945050505050565b834211156110585760405163384f7ce560e21b815260040160405180910390fd5b6001600160a01b03871660009081527fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeb9602081815260408084205481517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981528084018d90528083018c9052606081018b90526080810182905260a081018a905260c090204686527fbb9c3660b51e1fafa886fcf600a68efa81371bd50359eccba98f0c4fff2cfeba909352908420549293919290918190036111345761111d611401565b466000908152600186016020526040902081905590505b60405161190160f01b8152600281018290526022810184905260429020600061115f828a8a8a6114b4565b90508c6001600160a01b0316816001600160a01b03161461119357604051637570072b60e11b815260040160405180910390fd5b6001600160a01b038d1660009081526020879052604081208054916111b783611bf6565b91905055506111c78d8d8d6109c1565b5050505050505050505050505050565b600080516020611c1083398151915280549115156101000261ff0019909216919091179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516001600160a01b038481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304761050f8282611b11565b7f2967a798b92539a1b9eefe4d8eb931f96b68d27665e276f1bee2d5db7f74304861050f8282611b11565b6001600160e01b031980831690036112f95760405163b0a19dd560e01b815260040160405180910390fd5b6001600160e01b03199190911660009081527ffc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d860205260409020805460ff1916911515919091179055565b6001600160a01b0391821660009081527fc991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b56020908152604080832093909416825291909152205490565b60607f377d51b8f3c321ac06c08d08eb5924030a0062cf68630d0ace73345d5f49f6fd610933565b610467816111fe565b60006113cb8484611344565b9050808211156113ed5760405162e14ccf60e11b815260040160405180910390fd5b6113fa84848484036109c1565b5050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61142c61090f565b80516020918201206040805180820190915260018152603160f81b9201919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc646604080516020810195909552840192909252606083015260808201523060a082015260c00160405160208183030381529060405280519060200120905090565b505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156114f75760405163e4a61add60e01b815260040160405180910390fd5b8360ff16601b1415801561150f57508360ff16601c14155b1561152d57604051630acd54a960e41b815260040160405180910390fd5b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015611581573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115b5576040516347f3b32760e11b815260040160405180910390fd5b95945050505050565b6000602082840312156115d057600080fd5b81356001600160e01b03198116811461038257600080fd5b6000815180845260005b8181101561160e576020818501810151868301820152016115f2565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061038260208301846115e8565b80356001600160a01b038116811461165857600080fd5b919050565b6000806040838503121561167057600080fd5b61167983611641565b946020939093013593505050565b60008060006060848603121561169c57600080fd5b6116a584611641565b92506116b360208501611641565b9150604084013590509250925092565b6000602082840312156116d557600080fd5b5035919050565b6000602082840312156116ee57600080fd5b61038282611641565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261171e57600080fd5b813567ffffffffffffffff80821115611739576117396116f7565b604051601f8301601f19908116603f01168101908282118183101715611761576117616116f7565b8160405283815286602085880101111561177a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156117ac57600080fd5b813567ffffffffffffffff8111156117c357600080fd5b6103c08482850161170d565b600080602083850312156117e257600080fd5b823567ffffffffffffffff808211156117fa57600080fd5b818501915085601f83011261180e57600080fd5b81358181111561181d57600080fd5b8660208260051b850101111561183257600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561189957603f198886030184526118878583516115e8565b9450928501929085019060010161186b565b5092979650505050505050565b803560ff8116811461165857600080fd5b600080600080600080600060e0888a0312156118d257600080fd5b6118db88611641565b96506118e960208901611641565b95506040880135945060608801359350611905608089016118a6565b925060a0880135915060c0880135905092959891949750929550565b600080600080600060a0868803121561193957600080fd5b61194286611641565b9450602086013567ffffffffffffffff8082111561195f57600080fd5b61196b89838a0161170d565b9550604088013591508082111561198157600080fd5b5061198e8882890161170d565b93505061199d606087016118a6565b949793965091946080013592915050565b600080604083850312156119c157600080fd5b6119ca83611641565b91506119d860208401611641565b90509250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611a0e57600080fd5b83018035915067ffffffffffffffff821115611a2957600080fd5b602001915036819003821315611a3e57600080fd5b9250929050565b8183823760009101908152919050565b600181811c90821680611a6957607f821691505b602082108103611a8957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561036057610360611a8f565b8082018082111561036057610360611a8f565b601f8211156114af57600081815260208120601f850160051c81016020861015611af25750805b601f850160051c820191505b818110156108af57828155600101611afe565b815167ffffffffffffffff811115611b2b57611b2b6116f7565b611b3f81611b398454611a55565b84611acb565b602080601f831160018114611b745760008415611b5c5750858301515b600019600386901b1c1916600185901b1785556108af565b600085815260208120601f198616915b82811015611ba357888601518255948401946001909101908401611b84565b5085821015611bc15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611be460408301856115e8565b82810360208401526115b581856115e8565b600060018201611c0857611c08611a8f565b506001019056fe57273313c8845d368ba3ea905aa1935a070969a02baf31b3abd35b1dbe87cdf4c991b2e918acaba8e5721668ed0b1982684e5a8692a621bcd2d7ef326bb015b4a26469706673582212200dd59a76a4a82271117ab0530090907c368963bddd1c092cf5d4b32223067adb64736f6c63430008100033",
    "sourceMap": "1573:2399:155:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:129:43;;;;;;:::i;:::-;;:::i;:::-;;;470:14:170;;463:22;445:41;;433:2;418:18;444:129:43;;;;;;;;356:85:74;;;:::i;:::-;;;;;;;:::i;972:135:65:-;;;;;;:::i;:::-;;:::i;467:93::-;;;:::i;:::-;;;1733:25:170;;;1721:2;1706:18;467:93:65;1587:177:170;1366:191:65;;;;;;:::i;:::-;;:::i;642:85:74:-;;;:::i;:::-;;;2274:4:170;2262:17;;;2244:36;;2232:2;2217:18;642:85:74;2102:184:170;658:147:79;;;:::i;492:165:70:-;;;;;;:::i;:::-;;:::i;3216::155:-;;;;;;:::i;:::-;;:::i;:::-;;2784:209;;;;;;:::i;:::-;;:::i;608:111:65:-;;;;;;:::i;:::-;;:::i;855:99:79:-;;;;;;:::i;:::-;;:::i;378:87:24:-;;;:::i;:::-;;;-1:-1:-1;;;;;3013:32:170;;;2995:51;;2983:2;2968:18;378:87:24;2849:203:170;1421:177:110;;;;;;:::i;:::-;;:::i;497:89:74:-;;;:::i;713:165:70:-;;;;;;:::i;:::-;;:::i;1155:163:65:-;;;;;;:::i;:::-;;:::i;312:675:88:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1004:257:79:-;;;;;;:::i;:::-;;:::i;1682:577:155:-;;;;;;:::i;:::-;;:::i;767:157:65:-;;;;;;:::i;:::-;;:::i;919:99:110:-;;;:::i;514:113:24:-;;;;;;:::i;:::-;;:::i;444:129:43:-;-1:-1:-1;;;;;;620:59:44;;512:4:43;620:59:44;;;219:52:45;620:59:44;;;;;;;;535:31:43;528:38;444:129;-1:-1:-1;;444:129:43:o;356:85:74:-;395:13;427:7;:5;:7::i;:::-;420:14;;356:85;:::o;972:135:65:-;1040:4;1063:37;1072:10;1084:7;1093:6;1063:8;:37::i;:::-;1056:44;972:135;-1:-1:-1;;;972:135:65:o;467:93::-;513:7;539:14;500:37:66;;;419:125;1366:191:65;1487:4;1510:40;1524:6;1532:9;1543:6;1510:13;:40::i;:::-;1503:47;1366:191;-1:-1:-1;;;;1366:191:65:o;642:85:74:-;685:5;709:11;933:38:75;;;;;857:121;658:147:79;733:23;779:19;:17;:19::i;492:165:70:-;592:4;615:35;634:7;643:6;615:18;:35::i;3216:165:155:-;3308:7;3282:22;3293:10;3282;:22::i;:::-;:33;;3274:64;;;;-1:-1:-1;;;3274:64:155;;7678:2:170;3274:64:155;;;7660:21:170;7717:2;7697:18;;;7690:30;-1:-1:-1;;;7736:18:170;;;7729:48;7794:18;;3274:64:155;;;;;;;;;3348:26;3354:10;3366:7;3348:5;:26::i;:::-;3216:165;:::o;2784:209::-;2863:10;:8;:10::i;:::-;2855:46;;;;-1:-1:-1;;;2855:46:155;;8025:2:170;2855:46:155;;;8007:21:170;8064:2;8044:18;;;8037:30;8103:25;8083:18;;;8076:53;8146:18;;2855:46:155;7823:347:170;2855:46:155;2919:7;2930:1;2919:12;2911:45;;;;-1:-1:-1;;;2911:45:155;;8377:2:170;2911:45:155;;;8359:21:170;8416:2;8396:18;;;8389:30;-1:-1:-1;;;8435:18:170;;;8428:50;8495:18;;2911:45:155;8175:344:170;2911:45:155;2967:19;2973:3;2978:7;2967:5;:19::i;:::-;2784:209;;:::o;608:111:65:-;667:7;693:19;704:7;693:10;:19::i;855:99:79:-;907:7;933:14;941:5;933:7;:14::i;378:87:24:-;424:7;450:8;:6;:8::i;1421:177:110:-;1489:20;:18;:20::i;:::-;1484:76;;1525:24;;-1:-1:-1;;;1525:24:110;;8726:2:170;1525:24:110;;;8708:21:170;8765:2;8745:18;;;8738:30;-1:-1:-1;;;8784:18:170;;;8777:44;8838:18;;1525:24:110;8524:338:170;1484:76:110;1570:21;1586:4;1570:15;:21::i;497:89:74:-;538:13;570:9;:7;:9::i;713:165:70:-;813:4;836:35;855:7;864:6;836:18;:35::i;1155:163:65:-;1248:4;1271:40;1281:10;1293:9;1304:6;1271:9;:40::i;312:675:88:-;386:22;442:4;430:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;420:34;;494:9;489:457;505:15;;;489:457;;;546:12;;595:4;635;;640:1;635:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;587:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;545:98;;;;666:7;662:270;;;710:10;697:7;705:1;697:10;;;;;;;;:::i;:::-;;;;;;:23;;;;662:270;;;823:16;820:1;;802:38;875:16;820:1;865:27;662:270;-1:-1:-1;;522:3:88;;489:457;;;;312:675;;;;:::o;1004:257:79:-;1204:50;1212:5;1219:7;1228:6;1236:8;1246:1;1249;1252;1204:7;:50::i;:::-;1004:257;;;;;;;:::o;1682:577:155:-;-1:-1:-1;;;;;;;;;;;1522:43:123;;;;;;3237:18:122;;3287:46;;;;;3332:1;3305:24;-1:-1:-1;;;;;;;;;;;1284:42:123;;;;1203:130;3305:24:122;:28;;;3287:46;3286:135;;;-1:-1:-1;3365:4:122;3357:25;:29;;;3355:65;;-1:-1:-1;;;;;;;;;;;;1284:42:123;;;3391:29:122;;3419:1;3391:29;3355:65;3265:228;;;;-1:-1:-1;;;3265:228:122;;10003:2:170;3265:228:122;;;9985:21:170;10042:2;10022:18;;;10015:30;10081:34;10061:18;;;10054:62;-1:-1:-1;;;10132:18:170;;;10125:44;10186:19;;3265:228:122;9801:410:170;3265:228:122;-1:-1:-1;;;;;;;;;;;1636:51:123;;-1:-1:-1;;1636:51:123;3519:1:122;1636:51:123;;;3535:14:122;3531:67;;;3565:22;3582:4;3565:16;:22::i;:::-;1844:17:155::1;1854:6;1844:9;:17::i;:::-;1872:15;1881:5;1872:8;:15::i;:::-;1897:19;1908:7;1897:10;:19::i;:::-;1295:38:75::0;:49;;-1:-1:-1;;1295:49:75;;;;;;;1960:25:155::1;1966:10;1978:6;1960:5;:25::i;:::-;1996:54;-1:-1:-1::0;;;2045:4:155::1;1996:21;:54::i;:::-;2060:53;-1:-1:-1::0;;;2108:4:155::1;2060:21;:53::i;:::-;2123:55;-1:-1:-1::0;;;2173:4:155::1;2123:21;:55::i;:::-;2188:64;-1:-1:-1::0;;;2247:4:155::1;2188:21;:64::i;:::-;3622:14:122::0;3618:101;;;3652:23;3669:5;3652:16;:23::i;:::-;3694:14;;3706:1;2244:36:170;;3694:14:122;;2232:2:170;2217:18;3694:14:122;;;;;;;3618:101;3205:520;1682:577:155;;;;;:::o;767:157:65:-;864:7;890:27;901:6;909:7;890:10;:27::i;919:99:110:-;965:13;997:14;:12;:14::i;514:113:24:-;436:8:25;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:25;:10;-1:-1:-1;;;;;422:22:25;;418:54;;453:19;;-1:-1:-1;;;453:19:25;;;;;;;;;;;418:54;593:27:24::1;612:7;593:18;:27::i;395:121:75:-:0;443:13;237:55:76;475:29:75;468:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;395:121;:::o;1597:435:66:-;1720:4;-1:-1:-1;;;;;1740:20:66;;1736:68;;1769:35;;-1:-1:-1;;;1769:35:66;;;;;;;;;;;1736:68;-1:-1:-1;;;;;1818:21:66;;1814:67;;1848:33;;-1:-1:-1;;;1848:33:66;;;;;;;;;;;1814:67;-1:-1:-1;;;;;1892:44:66;;;;;;;:36;:44;;;;;;;;:53;;;;;;;;;;;;;:62;;;1970:33;;1733:25:170;;;1970:33:66;;;;;;;;;;;;-1:-1:-1;2021:4:66;1597:435;;;;;:::o;5355:268::-;5485:4;5501:46;5520:6;5528:10;5540:6;5501:18;:46::i;:::-;5558:36;5568:6;5576:9;5587:6;5558:9;:36::i;:::-;-1:-1:-1;5612:4:66;;5355:268;-1:-1:-1;;;;5355:268:66:o;834:327:80:-;2308:9;910:23;967:78;;;:44;:78;;;;;;;1060:23;;;1056:99;;1117:27;:25;:27::i;1056:99::-;834:327;:::o;753:393:71:-;862:4;878:17;898:31;909:10;921:7;898:10;:31::i;:::-;878:51;;992:6;980:9;:18;968:9;:30;964:94;;;1023:35;;-1:-1:-1;;;1023:35:71;;;;;;;;;;;964:94;1080:49;1089:10;1101:7;1122:6;1110:9;:18;1080:8;:49::i;690:158:66:-;772:7;-1:-1:-1;;;;;;;;;;;798:25:66;-1:-1:-1;;;;;798:43:66;;;:34;:43;;;;;;;;-1:-1:-1;798:43:66;;;;;690:158::o;3380:565::-;-1:-1:-1;;;;;3459:21:66;;3455:66;;3489:32;;-1:-1:-1;;;3489:32:66;;;;;;;;;;;3455:66;-1:-1:-1;;;;;3681:19:66;;3592:33;3681:19;;;-1:-1:-1;;;;;;;;;;;3681:19:66;;;;;;;;;3714:16;;;3710:60;;;3739:31;;-1:-1:-1;;;3739:31:66;;;;;;;;;;;3710:60;-1:-1:-1;;;;;3804:19:66;;:10;:19;;;;;;;;;;3826:16;;;3804:38;;3862:13;;;:23;;3836:6;;3804:10;3862:23;;3836:6;;3862:23;:::i;:::-;;;;-1:-1:-1;;3901:37:66;;1733:25:170;;;3927:1:66;;-1:-1:-1;;;;;3901:37:66;;;;;1721:2:170;1706:18;3901:37:66;;;;;;;3445:500;;3380:565;;:::o;3662:102:155:-;3713:4;3750:7;:5;:7::i;:::-;-1:-1:-1;;;;;3736:21:155;:10;-1:-1:-1;;;;;3736:21:155;;3729:28;;3662:102;:::o;2813:403:66:-;-1:-1:-1;;;;;2892:21:66;;2888:64;;2922:30;;-1:-1:-1;;;2922:30:66;;;;;;;;;;;2888:64;3094:13;:23;;-1:-1:-1;;;;;;;;;;;308:51:67;3111:6:66;;3023:33;;3094:23;;3111:6;;3094:23;:::i;:::-;;;;-1:-1:-1;;;;;;;3127:19:66;;:10;:19;;;;;;;;;;:29;;3150:6;;3127:10;:29;;3150:6;;3127:29;:::i;:::-;;;;-1:-1:-1;;3172:37:66;;1733:25:170;;;-1:-1:-1;;;;;3172:37:66;;;3189:1;;3172:37;;1721:2:170;1706:18;3172:37:66;;;;;;;2878:338;2813:403;;:::o;1279:129:80:-;1334:7;480:53:81;1360:27:80;540:159:81;647:111:25;186:49:26;722:29:25;-1:-1:-1;;;;;722:29:25;;647:111::o;3848:122:155:-;3918:4;3955:8;:6;:8::i;478:290:111:-;244:53:112;627:37:111;;542:40;;244:53:112;;627:37:111;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;690:4;674:1;:13;;:20;;;;;;:::i;:::-;;710:51;747:7;756:4;710:51;;;;;;;:::i;:::-;;;;;;;;532:236;;478:290;:::o;601:125:75:-;651:13;237:55:76;683:36:75;;676:43;;;;;:::i;1419:201:71:-;1528:4;1544:47;1563:10;1575:7;1584:6;1544:18;:47::i;:::-;-1:-1:-1;1609:4:71;1419:201;;;;:::o;4256:761:66:-;4382:4;-1:-1:-1;;;;;4402:20:66;;4398:69;;4431:36;;-1:-1:-1;;;4431:36:66;;;;;;;;;;;4398:69;-1:-1:-1;;;;;4481:23:66;;4477:70;;4513:34;;-1:-1:-1;;;4513:34:66;;;;;;;;;;;4477:70;-1:-1:-1;;;;;4711:18:66;;4616:33;4711:18;;;-1:-1:-1;;;;;;;;;;;4711:18:66;;;;;;;;;4743:22;;;4739:70;;;4774:35;;-1:-1:-1;;;4774:35:66;;;;;;;;;;;4739:70;-1:-1:-1;;;;;4843:18:66;;;:10;:18;;;;;;;;;;;4864:22;;;4843:43;;4906:21;;;;;;;;:31;;4880:6;;4843:10;4906:31;;4880:6;;4906:31;:::i;:::-;;;;;;;;4970:9;-1:-1:-1;;;;;4953:35:66;4962:6;-1:-1:-1;;;;;4953:35:66;;4981:6;4953:35;;;;1733:25:170;;1721:2;1706:18;;1587:177;4953:35:66;;;;;;;;-1:-1:-1;5006:4:66;;4256:761;-1:-1:-1;;;;;4256:761:66:o;2911:2462:80:-;3136:8;3118:15;:26;3114:69;;;3153:30;;-1:-1:-1;;;3153:30:80;;;;;;;;;;;3114:69;-1:-1:-1;;;;;3631:15:80;;3511:35;3631:15;;;480:53:81;3631:15:80;;;;;;;;;3735:9;;3918:66;3869:129;;4018:16;;;4011:31;;;4062:16;;;4055:33;;;4121:2;4108:16;;4101:32;;;4166:3;4153:17;;4146:32;;;4211:3;4198:17;;4191:35;;;4273:3;4254:23;;2308:9;4323:30;;:18;:30;;;;;;;480:53:81;;4254:23:80;;3631:15;;4368:23;;;4364:161;;4425:27;:25;:27::i;:::-;2308:9;4466:30;;;;:18;;;:30;;;;;:48;;;4407:45;-1:-1:-1;4364:161:80;4819:2;4813:9;-1:-1:-1;;;4836:129:80;;5015:1;5002:15;;4995:40;;;5090:2;5077:16;;5070:36;;;5165:2;5146:22;;4712:12;5205:21;5146:22;5218:1;5221;5224;5205:12;:21::i;:::-;5188:38;;5251:5;-1:-1:-1;;;;;5241:15:80;:6;-1:-1:-1;;;;;5241:15:80;;5237:59;;5265:31;;-1:-1:-1;;;5265:31:80;;;;;;;;;;;5237:59;-1:-1:-1;;;;;5307:15:80;;:8;:15;;;;;;;;;;:17;;;;;;:::i;:::-;;;;;;5334:32;5343:5;5350:7;5359:6;5334:8;:32::i;:::-;;3104:2269;;;;;;2911:2462;;;;;;;:::o;1700:117:123:-;-1:-1:-1;;;;;;;;;;;1758:52:123;;;;;;;-1:-1:-1;;1758:52:123;;;;;;;;;1700:117::o;1203:207:25:-;186:49:26;1359:7:25;;1338:38;;-1:-1:-1;;;;;1338:38:25;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:25;-1:-1:-1;;;;;1386:17:25;;;;;;;;;;1203:207::o;984:113:75:-;237:55:76;1049:41:75;1086:4;237:55:76;1049:41:75;:::i;1103:121::-;1172:36;:45;1211:6;1172:36;:45;:::i;899:238:44:-;-1:-1:-1;;;;;;986:25:44;;;;;982:70;;1020:32;;-1:-1:-1;;;1020:32:44;;;;;;;;;;;982:70;-1:-1:-1;;;;;;1062:59:44;;;;:46;:59;;;219:52:45;1062:59:44;;;;;:68;;-1:-1:-1;;1062:68:44;;;;;;;;;;899:238::o;1067:192:66:-;-1:-1:-1;;;;;1199:44:66;;;1173:7;1199:44;;;:36;:44;;;;;;;;:53;;;;;;;;;;;;;1067:192::o;266:130:111:-;313:13;244:53:112;345:32:111;304:206:112;1100:97:25;1172:18;1182:7;1172:9;:18::i;2304:346:66:-;2430:17;2450:27;2461:6;2469:7;2450:10;:27::i;:::-;2430:47;;2501:9;2492:6;:18;2488:65;;;2519:34;;-1:-1:-1;;;2519:34:66;;;;;;;;;;;2488:65;2588:45;2597:6;2605:7;2626:6;2614:9;:18;2588:8;:45::i;:::-;;2420:230;2304:346;;;:::o;1535:576:80:-;1619:23;1780:133;1947:7;:5;:7::i;:::-;1931:25;;;;;;;1999:10;;;;;;;;;;;;-1:-1:-1;;;1999:10:80;;;;;;1989:21;2308:9;1752:342;;;;;;14186:25:170;;;;14227:18;;14220:34;;;;14270:18;;;14263:34;14313:18;;;14306:34;2075:4:80;14356:19:170;;;14349:61;14158:19;;1752:342:80;;;;;;;;;;;;1729:375;;;;;;1711:393;;1535:576;:::o;5929:121:66:-;;;;:::o;1342:1452:30:-;1465:7;2400:66;2375:91;;2358:143;;;2484:17;;-1:-1:-1;;;2484:17:30;;;;;;;;;;;2358:143;2515:1;:7;;2520:2;2515:7;;:18;;;;;2526:1;:7;;2531:2;2526:7;;2515:18;2511:48;;;2542:17;;-1:-1:-1;;;2542:17:30;;;;;;;;;;;2511:48;2671:24;;;2654:14;2671:24;;;;;;;;;14648:25:170;;;14721:4;14709:17;;14689:18;;;14682:45;;;;14743:18;;;14736:34;;;14786:18;;;14779:34;;;2671:24:30;;14620:19:170;;2671:24:30;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2671:24:30;;-1:-1:-1;;2671:24:30;;;-1:-1:-1;;;;;;;2709:20:30;;2705:58;;2738:25;;-1:-1:-1;;;2738:25:30;;;;;;;;;;;2705:58;2781:6;1342:1452;-1:-1:-1;;;;;1342:1452:30:o;14:286:170:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:170;;209:43;;199:71;;266:1;263;256:12;497:423;539:3;577:5;571:12;604:6;599:3;592:19;629:1;639:162;653:6;650:1;647:13;639:162;;;715:4;771:13;;;767:22;;761:29;743:11;;;739:20;;732:59;668:12;639:162;;;643:3;846:1;839:4;830:6;825:3;821:16;817:27;810:38;909:4;902:2;898:7;893:2;885:6;881:15;877:29;872:3;868:39;864:50;857:57;;;497:423;;;;:::o;925:220::-;1074:2;1063:9;1056:21;1037:4;1094:45;1135:2;1124:9;1120:18;1112:6;1094:45;:::i;1150:173::-;1218:20;;-1:-1:-1;;;;;1267:31:170;;1257:42;;1247:70;;1313:1;1310;1303:12;1247:70;1150:173;;;:::o;1328:254::-;1396:6;1404;1457:2;1445:9;1436:7;1432:23;1428:32;1425:52;;;1473:1;1470;1463:12;1425:52;1496:29;1515:9;1496:29;:::i;:::-;1486:39;1572:2;1557:18;;;;1544:32;;-1:-1:-1;;;1328:254:170:o;1769:328::-;1846:6;1854;1862;1915:2;1903:9;1894:7;1890:23;1886:32;1883:52;;;1931:1;1928;1921:12;1883:52;1954:29;1973:9;1954:29;:::i;:::-;1944:39;;2002:38;2036:2;2025:9;2021:18;2002:38;:::i;:::-;1992:48;;2087:2;2076:9;2072:18;2059:32;2049:42;;1769:328;;;;;:::o;2473:180::-;2532:6;2585:2;2573:9;2564:7;2560:23;2556:32;2553:52;;;2601:1;2598;2591:12;2553:52;-1:-1:-1;2624:23:170;;2473:180;-1:-1:-1;2473:180:170:o;2658:186::-;2717:6;2770:2;2758:9;2749:7;2745:23;2741:32;2738:52;;;2786:1;2783;2776:12;2738:52;2809:29;2828:9;2809:29;:::i;3057:127::-;3118:10;3113:3;3109:20;3106:1;3099:31;3149:4;3146:1;3139:15;3173:4;3170:1;3163:15;3189:719;3232:5;3285:3;3278:4;3270:6;3266:17;3262:27;3252:55;;3303:1;3300;3293:12;3252:55;3339:6;3326:20;3365:18;3402:2;3398;3395:10;3392:36;;;3408:18;;:::i;:::-;3483:2;3477:9;3451:2;3537:13;;-1:-1:-1;;3533:22:170;;;3557:2;3529:31;3525:40;3513:53;;;3581:18;;;3601:22;;;3578:46;3575:72;;;3627:18;;:::i;:::-;3667:10;3663:2;3656:22;3702:2;3694:6;3687:18;3748:3;3741:4;3736:2;3728:6;3724:15;3720:26;3717:35;3714:55;;;3765:1;3762;3755:12;3714:55;3829:2;3822:4;3814:6;3810:17;3803:4;3795:6;3791:17;3778:54;3876:1;3869:4;3864:2;3856:6;3852:15;3848:26;3841:37;3896:6;3887:15;;;;;;3189:719;;;;:::o;3913:322::-;3982:6;4035:2;4023:9;4014:7;4010:23;4006:32;4003:52;;;4051:1;4048;4041:12;4003:52;4091:9;4078:23;4124:18;4116:6;4113:30;4110:50;;;4156:1;4153;4146:12;4110:50;4179;4221:7;4212:6;4201:9;4197:22;4179:50;:::i;4240:626::-;4337:6;4345;4398:2;4386:9;4377:7;4373:23;4369:32;4366:52;;;4414:1;4411;4404:12;4366:52;4454:9;4441:23;4483:18;4524:2;4516:6;4513:14;4510:34;;;4540:1;4537;4530:12;4510:34;4578:6;4567:9;4563:22;4553:32;;4623:7;4616:4;4612:2;4608:13;4604:27;4594:55;;4645:1;4642;4635:12;4594:55;4685:2;4672:16;4711:2;4703:6;4700:14;4697:34;;;4727:1;4724;4717:12;4697:34;4780:7;4775:2;4765:6;4762:1;4758:14;4754:2;4750:23;4746:32;4743:45;4740:65;;;4801:1;4798;4791:12;4740:65;4832:2;4824:11;;;;;4854:6;;-1:-1:-1;4240:626:170;;-1:-1:-1;;;;4240:626:170:o;4871:801::-;5031:4;5060:2;5100;5089:9;5085:18;5130:2;5119:9;5112:21;5153:6;5188;5182:13;5219:6;5211;5204:22;5257:2;5246:9;5242:18;5235:25;;5319:2;5309:6;5306:1;5302:14;5291:9;5287:30;5283:39;5269:53;;5357:2;5349:6;5345:15;5378:1;5388:255;5402:6;5399:1;5396:13;5388:255;;;5495:2;5491:7;5479:9;5471:6;5467:22;5463:36;5458:3;5451:49;5523:40;5556:6;5547;5541:13;5523:40;:::i;:::-;5513:50;-1:-1:-1;5621:12:170;;;;5586:15;;;;5424:1;5417:9;5388:255;;;-1:-1:-1;5660:6:170;;4871:801;-1:-1:-1;;;;;;;4871:801:170:o;5677:156::-;5743:20;;5803:4;5792:16;;5782:27;;5772:55;;5823:1;5820;5813:12;5838:606;5949:6;5957;5965;5973;5981;5989;5997;6050:3;6038:9;6029:7;6025:23;6021:33;6018:53;;;6067:1;6064;6057:12;6018:53;6090:29;6109:9;6090:29;:::i;:::-;6080:39;;6138:38;6172:2;6161:9;6157:18;6138:38;:::i;:::-;6128:48;;6223:2;6212:9;6208:18;6195:32;6185:42;;6274:2;6263:9;6259:18;6246:32;6236:42;;6297:37;6329:3;6318:9;6314:19;6297:37;:::i;:::-;6287:47;;6381:3;6370:9;6366:19;6353:33;6343:43;;6433:3;6422:9;6418:19;6405:33;6395:43;;5838:606;;;;;;;;;;:::o;6449:757::-;6562:6;6570;6578;6586;6594;6647:3;6635:9;6626:7;6622:23;6618:33;6615:53;;;6664:1;6661;6654:12;6615:53;6687:29;6706:9;6687:29;:::i;:::-;6677:39;;6767:2;6756:9;6752:18;6739:32;6790:18;6831:2;6823:6;6820:14;6817:34;;;6847:1;6844;6837:12;6817:34;6870:50;6912:7;6903:6;6892:9;6888:22;6870:50;:::i;:::-;6860:60;;6973:2;6962:9;6958:18;6945:32;6929:48;;7002:2;6992:8;6989:16;6986:36;;;7018:1;7015;7008:12;6986:36;;7041:52;7085:7;7074:8;7063:9;7059:24;7041:52;:::i;:::-;7031:62;;;7112:36;7144:2;7133:9;7129:18;7112:36;:::i;:::-;6449:757;;;;-1:-1:-1;6449:757:170;;7195:3;7180:19;7167:33;;6449:757;-1:-1:-1;;6449:757:170:o;7211:260::-;7279:6;7287;7340:2;7328:9;7319:7;7315:23;7311:32;7308:52;;;7356:1;7353;7346:12;7308:52;7379:29;7398:9;7379:29;:::i;:::-;7369:39;;7427:38;7461:2;7450:9;7446:18;7427:38;:::i;:::-;7417:48;;7211:260;;;;;:::o;8867:127::-;8928:10;8923:3;8919:20;8916:1;8909:31;8959:4;8956:1;8949:15;8983:4;8980:1;8973:15;8999:521;9076:4;9082:6;9142:11;9129:25;9236:2;9232:7;9221:8;9205:14;9201:29;9197:43;9177:18;9173:68;9163:96;;9255:1;9252;9245:12;9163:96;9282:33;;9334:20;;;-1:-1:-1;9377:18:170;9366:30;;9363:50;;;9409:1;9406;9399:12;9363:50;9442:4;9430:17;;-1:-1:-1;9473:14:170;9469:27;;;9459:38;;9456:58;;;9510:1;9507;9500:12;9456:58;8999:521;;;;;:::o;9525:271::-;9708:6;9700;9695:3;9682:33;9664:3;9734:16;;9759:13;;;9734:16;9525:271;-1:-1:-1;9525:271:170:o;10415:380::-;10494:1;10490:12;;;;10537;;;10558:61;;10612:4;10604:6;10600:17;10590:27;;10558:61;10665:2;10657:6;10654:14;10634:18;10631:38;10628:161;;10711:10;10706:3;10702:20;10699:1;10692:31;10746:4;10743:1;10736:15;10774:4;10771:1;10764:15;10628:161;;10415:380;;;:::o;10800:127::-;10861:10;10856:3;10852:20;10849:1;10842:31;10892:4;10889:1;10882:15;10916:4;10913:1;10906:15;10932:128;10999:9;;;11020:11;;;11017:37;;;11034:18;;:::i;11065:125::-;11130:9;;;11151:10;;;11148:36;;;11164:18;;:::i;11321:545::-;11423:2;11418:3;11415:11;11412:448;;;11459:1;11484:5;11480:2;11473:17;11529:4;11525:2;11515:19;11599:2;11587:10;11583:19;11580:1;11576:27;11570:4;11566:38;11635:4;11623:10;11620:20;11617:47;;;-1:-1:-1;11658:4:170;11617:47;11713:2;11708:3;11704:12;11701:1;11697:20;11691:4;11687:31;11677:41;;11768:82;11786:2;11779:5;11776:13;11768:82;;;11831:17;;;11812:1;11801:13;11768:82;;12042:1352;12168:3;12162:10;12195:18;12187:6;12184:30;12181:56;;;12217:18;;:::i;:::-;12246:97;12336:6;12296:38;12328:4;12322:11;12296:38;:::i;:::-;12290:4;12246:97;:::i;:::-;12398:4;;12462:2;12451:14;;12479:1;12474:663;;;;13181:1;13198:6;13195:89;;;-1:-1:-1;13250:19:170;;;13244:26;13195:89;-1:-1:-1;;11999:1:170;11995:11;;;11991:24;11987:29;11977:40;12023:1;12019:11;;;11974:57;13297:81;;12444:944;;12474:663;11268:1;11261:14;;;11305:4;11292:18;;-1:-1:-1;;12510:20:170;;;12628:236;12642:7;12639:1;12636:14;12628:236;;;12731:19;;;12725:26;12710:42;;12823:27;;;;12791:1;12779:14;;;;12658:19;;12628:236;;;12632:3;12892:6;12883:7;12880:19;12877:201;;;12953:19;;;12947:26;-1:-1:-1;;13036:1:170;13032:14;;;13048:3;13028:24;13024:37;13020:42;13005:58;12990:74;;12877:201;-1:-1:-1;;;;;13124:1:170;13108:14;;;13104:22;13091:36;;-1:-1:-1;12042:1352:170:o;13399:383::-;13596:2;13585:9;13578:21;13559:4;13622:45;13663:2;13652:9;13648:18;13640:6;13622:45;:::i;:::-;13715:9;13707:6;13703:22;13698:2;13687:9;13683:18;13676:50;13743:33;13769:6;13761;13743:33;:::i;13787:135::-;13826:3;13847:17;;;13844:43;;13867:18;;:::i;:::-;-1:-1:-1;13914:1:170;13903:13;;13787:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "contractURI()": "e8a3d485",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,string,string,uint8,uint256)": "d72bdc53",
    "mintTo(address,uint256)": "449a52f8",
    "multicall(bytes[])": "ac9650d8",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "owner()": "8da5cb5b",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "setContractURI(string)": "938e3d7b",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSA__InvalidS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSA__InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSA__InvalidV\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__ApproveFromZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__ApproveToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__BurnExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__BurnFromZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__TransferExceedsBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__TransferFromZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Base__TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Extended__ExcessiveAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Extended__InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Permit__ExpiredDeadline\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20Permit__InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Thirdweb inspired ERC20Base contract using solidstates ERC20 contract and diamond storage throughout.       has the edition of ERC165  The `ERC20Base` smart contract implements the ERC20 standard.  It includes the following additions to standard ERC20 logic:      - Ability to mint & burn tokens via the provided `mintTo` & `burn` functions.      - Ownership of the contract, with the ability to restrict certain functions to        only be called by the contract's owner.      - Multicall capability to perform multiple actions atomically      - EIP 2612 compliance: See {ERC20-permit} method, which can be used to change an account's ERC20 allowance by                             presenting a message signed by the account.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"domainSeparator\":\"domain separator\"}},\"allowance(address,address)\":{\"params\":{\"holder\":\"approver of allowance\",\"spender\":\"recipient of allowance\"},\"returns\":{\"_0\":\"token allowance\"}},\"approve(address,uint256)\":{\"details\":\"prefer ERC20Extended functions to avoid transaction-ordering vulnerability (see https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729)\",\"params\":{\"amount\":\"quantity of tokens approved for spending\",\"spender\":\"recipient of allowance\"},\"returns\":{\"_0\":\"success status (always true; otherwise function should revert)\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"address to query\"},\"returns\":{\"_0\":\"token balance\"}},\"burn(uint256)\":{\"details\":\"Caller should own the `_amount` of tokens.\",\"params\":{\"_amount\":\"The number of tokens to burn.\"}},\"contractURI()\":{\"details\":\"Returns the metadata URI of the contract.\"},\"decimals()\":{\"returns\":{\"_0\":\"token decimals\"}},\"decreaseAllowance(address,uint256)\":{\"params\":{\"amount\":\"quantity by which to decrease allowance\",\"spender\":\"address whose allowance to decrease\"},\"returns\":{\"_0\":\"success status (always true; otherwise function will revert)\"}},\"increaseAllowance(address,uint256)\":{\"params\":{\"amount\":\"quantity by which to increase allowance\",\"spender\":\"address whose allowance to increase\"},\"returns\":{\"_0\":\"success status (always true; otherwise function will revert)\"}},\"mintTo(address,uint256)\":{\"details\":\"The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\",\"params\":{\"_amount\":\"Quantity of tokens to mint.\",\"_to\":\"The recipient of the tokens to mint.\"}},\"multicall(bytes[])\":{\"params\":{\"data\":\"array of function call data payloads\"},\"returns\":{\"results\":\"array of function call results\"}},\"name()\":{\"returns\":{\"_0\":\"token name\"}},\"nonces(address)\":{\"returns\":{\"_0\":\"current nonce\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"this function may be vulnerable to approval replay attacks\",\"params\":{\"amount\":\"quantity of tokens to approve\",\"owner\":\"holder of tokens and signer of permit\",\"r\":\"secp256k1 'r' value\",\"s\":\"secp256k1 's' value\",\"spender\":\"beneficiary of approval\",\"v\":\"secp256k1 'v' value\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}},\"symbol()\":{\"returns\":{\"_0\":\"token symbol\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"token supply\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"quantity of tokens to transfer\",\"recipient\":\"beneficiary of token transfer\"},\"returns\":{\"_0\":\"success status (always true; otherwise function should revert)\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"quantity of tokens to transfer\",\"holder\":\"holder of tokens prior to transfer\",\"recipient\":\"beneficiary of token transfer\"},\"returns\":{\"_0\":\"success status (always true; otherwise function should revert)\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"return the EIP-712 domain separator unique to contract and chain\"},\"allowance(address,address)\":{\"notice\":\"query the allowance granted from given holder to given spender\"},\"approve(address,uint256)\":{\"notice\":\"grant approval to spender to spend tokens\"},\"balanceOf(address)\":{\"notice\":\"query the token balance of given account\"},\"burn(uint256)\":{\"notice\":\"Lets an owner a given amount of their tokens.\"},\"decimals()\":{\"notice\":\"return token decimals, generally used only for display purposes\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"decrease spend amount granted to spender\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"increase spend amount granted to spender\"},\"mintTo(address,uint256)\":{\"notice\":\"Lets an authorized address mint tokens to a recipient.\"},\"multicall(bytes[])\":{\"notice\":\"batch function calls to the contract and return the results of each\"},\"name()\":{\"notice\":\"return token name\"},\"nonces(address)\":{\"notice\":\"get the current ERC2612 nonce for the given address\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"approve spender to transfer tokens held by owner via signature\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"},\"symbol()\":{\"notice\":\"return token symbol\"},\"totalSupply()\":{\"notice\":\"query the total minted token supply\"},\"transfer(address,uint256)\":{\"notice\":\"transfer tokens to given recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"transfer tokens to given recipient on behalf of given holder\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC20/ERC20Base.sol\":\"ERC20Base\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@erc721a-upgradeable/=lib/ERC721A-Upgradeable/\",\":@extensions/=src/extensions/\",\":@solidstate/=lib/solidstate-solidity/\",\":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solidstate-solidity/=lib/solidstate-solidity/contracts/\"]},\"sources\":{\"lib/solidstate-solidity/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"lib/solidstate-solidity/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"lib/solidstate-solidity/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"lib/solidstate-solidity/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"lib/solidstate-solidity/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"lib/solidstate-solidity/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x6c0d5a71c8b91a811b5b4e1cfafffd0ba4e6b54c5b9852bedb49a1b29e69e3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcfc0b3d59a5de3210eb218f05df05e053c1cb89cc08e4afce1f46c22afb10e9\",\"dweb:/ipfs/QmbVEQJkJnA2NSBVhUF6W97adH8di56FvkHDrbv4Z7nMWX\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba\",\"dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xc15863a59c442e22b3f5de4e3fa79fffd45dcbe66a9fc18c52b1114c8420e177\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d81471f1ba8fbb03ce54b3e10478c858cb59cc8557530f326d0e63af122a9039\",\"dweb:/ipfs/QmTfG89JXeWNio2JtL6RpUrX2KZPRa3gAy5KFDU4xk3nMR\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xb6cf9a675a98c26431c526340e999f383e90f3c32565b4e4199d0c76dc363f09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d9a70aea2844cc64f058505423439b176da57e88da7bb645c51782914cb0ea7\",\"dweb:/ipfs/QmWNXFwui4ptTUTD5MY45xP1F3ph4vCLjPRFxsXYDrXz8K\"]},\"lib/solidstate-solidity/contracts/interfaces/IERC20Internal.sol\":{\"keccak256\":\"0x5dc63954123c58280a48da71f91c435dd7373f56bd472867c80177359c885e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13af2862e67594093fce8a06db08b755e877c052dfaf34c6d46cd50bc2e3df6b\",\"dweb:/ipfs/QmTp5qgwFNNKk8T7whiZ8LTFMhYL8ztCKhNFfsRr7FS2H8\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x3f2268856fdd9b27946adc65010bc83992069a90034bf692ab630802a926a9c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8f4aa0a9d369054fa3241abbf4a937eff32e42f7984ec2c11efe84b3536bdfd\",\"dweb:/ipfs/QmdL9cjvBLa5yszgCdxsqoh5BMYj6tJ2YWKPfLcRSzkA9c\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xba7b4d73d42dfc9f8083ce36aed0fa2c56c73878d8bda7d64f2fb908d5e04636\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08a4de8e6995d749ecd7f8c4c60a7e242e21cf9d44821fa270566eb3d7ed678d\",\"dweb:/ipfs/QmPNgKhBsv7PieDUR8Jvb4LkC57zt82jguw8QmuJ3J4UBG\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6\",\"dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28\",\"dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk\"]},\"lib/solidstate-solidity/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052\",\"dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5\"]},\"lib/solidstate-solidity/contracts/token/ERC20/ISolidStateERC20.sol\":{\"keccak256\":\"0x4800d771e5606f791a7c2662802718a727c361aaf547df8e6e849165ef91e9df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a470452a22d4e680b6c1bc50df9ff39ca8de006a475990d907cfd47ebef39f39\",\"dweb:/ipfs/QmS2c5s5zQcJ2yoGsNLDJNc1Ysf7wvw2eqrkzzE7G3zmQ2\"]},\"lib/solidstate-solidity/contracts/token/ERC20/SolidStateERC20.sol\":{\"keccak256\":\"0x458859f714ecda3776d03a87f3b26a60d871b201a4768a3d0422012e52e5415c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d18a77b113d6dbd4687126866b63044ecea910e7b196e13e4f630d538644ad1e\",\"dweb:/ipfs/QmfBL1JdyMoqnyFm7QqPL5aBp8NRaGpMwGTYnjDuFzQBqS\"]},\"lib/solidstate-solidity/contracts/token/ERC20/base/ERC20Base.sol\":{\"keccak256\":\"0xcb2e91570331bccad1beb1f30cf8bb1d4300b4222b828306d2f1ea9d867b2ef3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe725306435e4d4625a8ac0fe65ad3ab5866db840d9e2706920e75b9d66035d9\",\"dweb:/ipfs/QmXgcYV1jHUfegU4bZ5w4KQMUge7EzX7fvMuKGKVDAaM6T\"]},\"lib/solidstate-solidity/contracts/token/ERC20/base/ERC20BaseInternal.sol\":{\"keccak256\":\"0x571018562f714dbca7adb396b214a87b8fca12278aa706bb2ff5cbc8f4e0e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d864aa8ed0c828676695e7c4b791f3d56271557e67aeb87ffd4747839ef0adf\",\"dweb:/ipfs/QmbwjhaTtzmMCqe2nSumBKa3gdX1ioCuVGShgCGL652TA6\"]},\"lib/solidstate-solidity/contracts/token/ERC20/base/ERC20BaseStorage.sol\":{\"keccak256\":\"0x77c4f688fd58ae32a15d63103581c6a20466790f1e68b6b1db687e8707fee7b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afede5b919ee82ef8042426fd73c31d51029ef18175b104a31cab03bd0923e0f\",\"dweb:/ipfs/QmNuKg8NM6F44U5JQkkKifHGxznCt7JNMEECbknwDqzCpP\"]},\"lib/solidstate-solidity/contracts/token/ERC20/base/IERC20Base.sol\":{\"keccak256\":\"0x83fcb688381ff4fba9bc068d490d3f0fd83abd5e5ee46f24cfb18ae1906e071e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae77357bd78adac42bf63a71f212ff6c2357c11880544ad9014fbc70f2969c9\",\"dweb:/ipfs/QmPfaceGNUFZkioeQnrKp4PWQeNnNCGtaojsfLfX2b4GeW\"]},\"lib/solidstate-solidity/contracts/token/ERC20/base/IERC20BaseInternal.sol\":{\"keccak256\":\"0xa9c47a0ad2ab7f043a283ff148a8e4cf61d98f05fbed8d9ce35f6a0a403cc17f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90e5ca8a15f674bd8835b12428e21d6f4f85937a8c38c7df0f768f893ce77fa5\",\"dweb:/ipfs/QmYJmSst4DEXZoYPjuFTG5S7FpnCEXCDxDpQXwuz9dkMBE\"]},\"lib/solidstate-solidity/contracts/token/ERC20/extended/ERC20Extended.sol\":{\"keccak256\":\"0x8fc1235a301b4a1d794118c363a078f13f0ea5ffe6ab6b1cc7e7409980fa1619\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://936316fe041a88f9a6e6bf6f942bff0a44c56bdbd3b3661564d43f459880b590\",\"dweb:/ipfs/QmSwVcNzh9mkzYhVtoXNnqDt4r9LM5Ah9Vi7Xrxbin2CpR\"]},\"lib/solidstate-solidity/contracts/token/ERC20/extended/ERC20ExtendedInternal.sol\":{\"keccak256\":\"0xd32ec9a244d7daf96059884e29acbd9cac4597885fc27db717d855a15769fb74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1aab52a6f8213ab83535835aebded8bfd9c9c34d8976c7a4f2d631d893f0bd3f\",\"dweb:/ipfs/QmTywz2Jdid8fYqyJuwDRLDuBcQeeQuqmgQX3tkni35Wz1\"]},\"lib/solidstate-solidity/contracts/token/ERC20/extended/IERC20Extended.sol\":{\"keccak256\":\"0x2eaa3907a62acc5b79fcbc90773c458ed4fcb6885b92aea56598b62af51fbd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b0ac9aa52df0c430022151211d0da41341663517d56eba42df9984cccb862b1\",\"dweb:/ipfs/QmVipnZ51o3tDCEudurBaSXusWU4gCQ4qS7muvpBJuoYt5\"]},\"lib/solidstate-solidity/contracts/token/ERC20/extended/IERC20ExtendedInternal.sol\":{\"keccak256\":\"0x6fa7ab02fbac8389c99d4854ff7f6bf0de08459c167e5bbab15138b177b55de4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://808e16888d4b7ec51f19cf9bee6e957f229c20170ce5a4b79fd847a1f13cb38d\",\"dweb:/ipfs/QmdMzqqY2bxQMdooz1K4ueg7kBVD6GqUVcKYDFffk7ASJX\"]},\"lib/solidstate-solidity/contracts/token/ERC20/metadata/ERC20Metadata.sol\":{\"keccak256\":\"0x57b284c9dadfb1ace56b1db778cb72b922d60f228e0c4f90299c7392be004473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://212476d56fcb09c7bbdf7ba4e97cb1fb4c391e8bf7ed2ec67762ce3e58ff5671\",\"dweb:/ipfs/QmVDCWC9kRyQofrhhjptRSfW2fDmvBGN4mE3gsNV71qjXL\"]},\"lib/solidstate-solidity/contracts/token/ERC20/metadata/ERC20MetadataInternal.sol\":{\"keccak256\":\"0xa50e52d2ede659caaed611115b905facf0a11fd0ca4c5ae9b082ef563467eea3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ede064c8e993dd9f76cf45699be38908065f468a5952bcd4306372fea7221089\",\"dweb:/ipfs/QmVVjsuq5UqxVHyqRYbkoyTSbUbGVth3GNa3GmdwE8LC4s\"]},\"lib/solidstate-solidity/contracts/token/ERC20/metadata/ERC20MetadataStorage.sol\":{\"keccak256\":\"0x457312afbbb64fe0c5dfcb524e2d1122c314d409bca20a5ea5ba7275decfa3a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9ae08ddc49684074ccdf14eb4e6d6b8b9a139555a490abfda2d9450d2d6fda\",\"dweb:/ipfs/QmXQpMusZcFrdVh8fAa3F8KRcxgmPPH52XWY9C989kyyXm\"]},\"lib/solidstate-solidity/contracts/token/ERC20/metadata/IERC20Metadata.sol\":{\"keccak256\":\"0x22eefd0dbd7637f41c8bfc3662a4b1ae6f084f27f26e34cc9bf124e0aee10a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac459354c7e3ad54842b23ea469c0bd3464a95aa293f7fc09b34c590a356b1a6\",\"dweb:/ipfs/QmYvXnJq7pVrU3e18PbfahK9AwpSc1Yu2rHvsSJMXwKGZ1\"]},\"lib/solidstate-solidity/contracts/token/ERC20/metadata/IERC20MetadataInternal.sol\":{\"keccak256\":\"0x32464590a972a9325d20c7125d157594df9473b6496ce6a66df617c41c4039ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60159ad57e36fb414e79b3b9aa41ff0cdafa56585d104d67128d56e935635e01\",\"dweb:/ipfs/QmbBe4dh2zttkvqWyHn4QPj6yVpR14SWNTr4KiwSu37jk6\"]},\"lib/solidstate-solidity/contracts/token/ERC20/permit/ERC20Permit.sol\":{\"keccak256\":\"0xc643dedca17c9e43323def837213735d91e7a437abbb72b4de76d30a0083e8ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69b6189e4c3b2624d3d86c531113b3492f6d091fcfb4c3bc1065f00cc791a9bc\",\"dweb:/ipfs/QmdxahkhRHsUdCA7GwkSc1Mp2Bk9uCxZjwKwS6K4F855Xv\"]},\"lib/solidstate-solidity/contracts/token/ERC20/permit/ERC20PermitInternal.sol\":{\"keccak256\":\"0xa594b27e8f5ac45f5ccb3ad66f6f5cb9104e97425293716b8ce66395f4359d6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecddc3d20c3564389069cb788d529bb7cc9e3904e443f66f6634e481aea7fe3d\",\"dweb:/ipfs/QmWDbsq7qJv5y7S6j9o6EvmhZRBDqu6ZRLziSHT28j5LU8\"]},\"lib/solidstate-solidity/contracts/token/ERC20/permit/ERC20PermitStorage.sol\":{\"keccak256\":\"0x246e6651fcc1b9664bb689addca3c3122053affdf672037cab6ac1a5bcc1334a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6ef01b1b7efd7ec2a08a890a094488ad93f923dddf4b00bf0ed46f9e5d6d954\",\"dweb:/ipfs/QmVPzokENA8yfgqDvWpB1PZ8et1LTZoM1Ubt5ZGPG9kER1\"]},\"lib/solidstate-solidity/contracts/token/ERC20/permit/IERC20Permit.sol\":{\"keccak256\":\"0x4b906e3eab76bf0e4e3b96987f989f9e2350f70f775b2773ae84ffcf40816f0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97a30f1be8cf8d85fb23ca9e2f83a79d7499b0549afa74832801afb42e8d9f87\",\"dweb:/ipfs/QmR5Tu1fY75HAFTuoJ2AFvs7TpcupoEguJLKhMGmrSRjKK\"]},\"lib/solidstate-solidity/contracts/token/ERC20/permit/IERC20PermitInternal.sol\":{\"keccak256\":\"0x4f6e12f9e07cc66ca9ee57a25c40d9d2f55d3e800a3d6577c9d883068423eb22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8d626e9f9527fda26f30d811007fd087a4fd520ca56ab3f7821d22298981faf\",\"dweb:/ipfs/QmZCouA4wmAJP9bFvTjF9gnJiEAn7wYTr7GypkP2i6HsXL\"]},\"lib/solidstate-solidity/contracts/token/ERC20/permit/IERC2612.sol\":{\"keccak256\":\"0x449c45997514a8ebf30c7cd7a27778ce6fd6f7dac27c9505fd8a4f093f396e92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ad30720570447afbaa87e2b40158884fa859162f779022ff01a90bd61eadae7\",\"dweb:/ipfs/Qmc2PZQQsEuWwMz9WXXAnexDaxAf5jWJj5irGgrEEuNM1P\"]},\"lib/solidstate-solidity/contracts/token/ERC20/permit/IERC2612Internal.sol\":{\"keccak256\":\"0xdca4b94537ab13936677c889a29267e506f2f23da6f5f541f73a95e2db5b4db9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b59db5b753c269d10c4d71e375384c8612f477679715afe8b35ba6e4d4f67f1d\",\"dweb:/ipfs/QmUk4McXaQeFVZ3b4XsLJsWEdoKdxTLGSFQDi2Qe54oy6z\"]},\"lib/solidstate-solidity/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"lib/solidstate-solidity/contracts/utils/IMulticall.sol\":{\"keccak256\":\"0x39e630bc189607ae119c1208a632009fe418cc4eb2687b28e7fdbe78af7b79b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5afde99ff69a2e02fb24b6895b629de612547643dc119d01bf9937cad5452e0b\",\"dweb:/ipfs/QmR9WDSqAeNxRnju4XBUsRmN6TdgoATp9hcoC1kSDnVuZX\"]},\"lib/solidstate-solidity/contracts/utils/Multicall.sol\":{\"keccak256\":\"0x762f15ac4c28be19d0d7fb303ade8dea6ba52ff558fb6fba36df84a839e216b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://394c7fbb2b8e6d62b6e9e78124ef327a59c3d5fec21119fee2c153e2517e2986\",\"dweb:/ipfs/QmdDuVFLAxEPqjtBfWTeXhov6Nzjh7eG35YZsricP5jQkw\"]},\"lib/solidstate-solidity/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"src/extensions/contractMetadata/ContractMetadata.sol\":{\"keccak256\":\"0xf9b1229a45909e915ef12af800328118db1c595aaef67a20e1acd725684f2168\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://46633691888096232cdb06918b2944eafa4d49495e2306fc2e28884e9a917b89\",\"dweb:/ipfs/QmS9sAeRDzWy9rMyd7z8Q5BWT76kgYEEzVpp2dgHr5p5yj\"]},\"src/extensions/contractMetadata/ContractMetadataInternal.sol\":{\"keccak256\":\"0xb0b663565bdd0c13bdf9181a7f2a91b672edddb7ac735105879112c8a8f86bcd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://129467e2b99b2c144974ceb5460dc02c551d374ba13cc6cc95622768bce063a9\",\"dweb:/ipfs/QmVtwsf6DCZh5HKKuBpJJM3XMTzv5jMwKZzBLKtoU3xjGj\"]},\"src/extensions/contractMetadata/ContractMetadataStorage.sol\":{\"keccak256\":\"0x1dfebbe2c62ea8f7548e3c650ffb9d50965c3cb034bd9cbdd0b2369f125ad71b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2d3f4c69ca9d056696e3dd8da7228624b069f8f72f639d5757d76f09eab32c9e\",\"dweb:/ipfs/QmRkgANNs7yi6HetVWvwU3GL3JCoYA5q3rVNUxLVGEpqjN\"]},\"src/extensions/contractMetadata/IContractMetadata.sol\":{\"keccak256\":\"0xd5be120bf459578ea89d8bd8b2bc16b14d20e9b5428b7abefd633c627b193923\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f968d3038523f935e9ccc51bd107daacee352bfd0274e92ab77c6d0a1031dd12\",\"dweb:/ipfs/QmWLQZJG13uhcd6wDPLogNsfnMc9oTzP4UKvQiJ8RH3Mq5\"]},\"src/extensions/initializable/IInitializable.sol\":{\"keccak256\":\"0x42f99a0bd1167708a004557d628a1253c4b1d26221df63440a66c36e4830570b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://07594e13830bd6066fcd3d185db90e34f2301ff58b591467d0e53394dd6a5024\",\"dweb:/ipfs/QmagYyu76ciX5qTfhkBsN2pxWAuGwZzyaGq9Co2ckTDQo1\"]},\"src/extensions/initializable/Initializable.sol\":{\"keccak256\":\"0xa7f78f30f008e91b687547da51aa25a448679790d06cc1f10c3261eb45d853c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://959d4eea66aac4e4933b4d9f4fc723d2e48aa6bd12263fdd15acf95d67f7189a\",\"dweb:/ipfs/QmQApqrfc48qCBpA3GvsyXoJ1cXbPweJXCYW9BEyd5rwmN\"]},\"src/extensions/initializable/InitializableInternal.sol\":{\"keccak256\":\"0x20671afc6467e08b98449566ad7bab706e0058099c9305ab21891db888a75c33\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4d954c6ea53c6b06a50d950248fd462c20a33f4dac5f13d2f376d3dc3c54e0d7\",\"dweb:/ipfs/QmdGEWCcXCZBx1ZGSyjSGWciBB4eWkEYvRUemJsZVrzm3Y\"]},\"src/extensions/initializable/InitializableStorage.sol\":{\"keccak256\":\"0xd8046543dd0f739fa24a669e9a4d3cc3d50f4b42ca549e64bfdb634358217feb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1a1b059ae584fc07d8e09495ce1d6be84a26753090d37b6cd71b41fcc5f299f3\",\"dweb:/ipfs/QmPuKFQtc9wtrntisCuBfXeAg9oc7hyp5A3mPZGvAph6S1\"]},\"src/tokens/ERC20/ERC20Base.sol\":{\"keccak256\":\"0xb336dd00f660d7f94f27d7f84da449d6fff9aff8ed71d8c175b9f81f1f0b3391\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1edc15412bae052d3cc789ea0e85616194f1ef3c8f9425e0680cb4a47cec2b18\",\"dweb:/ipfs/QmS7JJFPw4itYmtbb2GtPY2AuaSTuvNyaR4ttpP9cMtD6r\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSA__InvalidS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSA__InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ECDSA__InvalidV"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC165Base__InvalidInterfaceId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__ApproveFromZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__ApproveToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__BurnExceedsBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__BurnFromZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__InsufficientAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__TransferExceedsBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__TransferFromZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Base__TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Extended__ExcessiveAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Extended__InsufficientAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Permit__ExpiredDeadline"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Permit__InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevURI",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "newURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "domainSeparator",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contractURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "_decimals",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "supply",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractURI"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "returns": {
              "domainSeparator": "domain separator"
            }
          },
          "allowance(address,address)": {
            "params": {
              "holder": "approver of allowance",
              "spender": "recipient of allowance"
            },
            "returns": {
              "_0": "token allowance"
            }
          },
          "approve(address,uint256)": {
            "details": "prefer ERC20Extended functions to avoid transaction-ordering vulnerability (see https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729)",
            "params": {
              "amount": "quantity of tokens approved for spending",
              "spender": "recipient of allowance"
            },
            "returns": {
              "_0": "success status (always true; otherwise function should revert)"
            }
          },
          "balanceOf(address)": {
            "params": {
              "account": "address to query"
            },
            "returns": {
              "_0": "token balance"
            }
          },
          "burn(uint256)": {
            "details": "Caller should own the `_amount` of tokens.",
            "params": {
              "_amount": "The number of tokens to burn."
            }
          },
          "contractURI()": {
            "details": "Returns the metadata URI of the contract."
          },
          "decimals()": {
            "returns": {
              "_0": "token decimals"
            }
          },
          "decreaseAllowance(address,uint256)": {
            "params": {
              "amount": "quantity by which to decrease allowance",
              "spender": "address whose allowance to decrease"
            },
            "returns": {
              "_0": "success status (always true; otherwise function will revert)"
            }
          },
          "increaseAllowance(address,uint256)": {
            "params": {
              "amount": "quantity by which to increase allowance",
              "spender": "address whose allowance to increase"
            },
            "returns": {
              "_0": "success status (always true; otherwise function will revert)"
            }
          },
          "mintTo(address,uint256)": {
            "details": "The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.",
            "params": {
              "_amount": "Quantity of tokens to mint.",
              "_to": "The recipient of the tokens to mint."
            }
          },
          "multicall(bytes[])": {
            "params": {
              "data": "array of function call data payloads"
            },
            "returns": {
              "results": "array of function call results"
            }
          },
          "name()": {
            "returns": {
              "_0": "token name"
            }
          },
          "nonces(address)": {
            "returns": {
              "_0": "current nonce"
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "this function may be vulnerable to approval replay attacks",
            "params": {
              "amount": "quantity of tokens to approve",
              "owner": "holder of tokens and signer of permit",
              "r": "secp256k1 'r' value",
              "s": "secp256k1 's' value",
              "spender": "beneficiary of approval",
              "v": "secp256k1 'v' value"
            }
          },
          "setContractURI(string)": {
            "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
            "params": {
              "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
            }
          },
          "supportsInterface(bytes4)": {
            "params": {
              "interfaceId": "interface id"
            },
            "returns": {
              "_0": "bool whether interface is supported"
            }
          },
          "symbol()": {
            "returns": {
              "_0": "token symbol"
            }
          },
          "totalSupply()": {
            "returns": {
              "_0": "token supply"
            }
          },
          "transfer(address,uint256)": {
            "params": {
              "amount": "quantity of tokens to transfer",
              "recipient": "beneficiary of token transfer"
            },
            "returns": {
              "_0": "success status (always true; otherwise function should revert)"
            }
          },
          "transferFrom(address,address,uint256)": {
            "params": {
              "amount": "quantity of tokens to transfer",
              "holder": "holder of tokens prior to transfer",
              "recipient": "beneficiary of token transfer"
            },
            "returns": {
              "_0": "success status (always true; otherwise function should revert)"
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "notice": "return the EIP-712 domain separator unique to contract and chain"
          },
          "allowance(address,address)": {
            "notice": "query the allowance granted from given holder to given spender"
          },
          "approve(address,uint256)": {
            "notice": "grant approval to spender to spend tokens"
          },
          "balanceOf(address)": {
            "notice": "query the token balance of given account"
          },
          "burn(uint256)": {
            "notice": "Lets an owner a given amount of their tokens."
          },
          "decimals()": {
            "notice": "return token decimals, generally used only for display purposes"
          },
          "decreaseAllowance(address,uint256)": {
            "notice": "decrease spend amount granted to spender"
          },
          "increaseAllowance(address,uint256)": {
            "notice": "increase spend amount granted to spender"
          },
          "mintTo(address,uint256)": {
            "notice": "Lets an authorized address mint tokens to a recipient."
          },
          "multicall(bytes[])": {
            "notice": "batch function calls to the contract and return the results of each"
          },
          "name()": {
            "notice": "return token name"
          },
          "nonces(address)": {
            "notice": "get the current ERC2612 nonce for the given address"
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "approve spender to transfer tokens held by owner via signature"
          },
          "setContractURI(string)": {
            "notice": "Lets a contract admin set the URI for contract-level metadata."
          },
          "supportsInterface(bytes4)": {
            "notice": "query whether contract has registered support for given interface"
          },
          "symbol()": {
            "notice": "return token symbol"
          },
          "totalSupply()": {
            "notice": "query the total minted token supply"
          },
          "transfer(address,uint256)": {
            "notice": "transfer tokens to given recipient"
          },
          "transferFrom(address,address,uint256)": {
            "notice": "transfer tokens to given recipient on behalf of given holder"
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@erc721a-upgradeable/=lib/ERC721A-Upgradeable/",
        ":@extensions/=src/extensions/",
        ":@solidstate/=lib/solidstate-solidity/",
        ":ERC721A-Upgradeable/=lib/ERC721A-Upgradeable/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solidstate-solidity/=lib/solidstate-solidity/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/tokens/ERC20/ERC20Base.sol": "ERC20Base"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solidstate-solidity/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/cryptography/ECDSA.sol": {
        "keccak256": "0x6c0d5a71c8b91a811b5b4e1cfafffd0ba4e6b54c5b9852bedb49a1b29e69e3ad",
        "urls": [
          "bzz-raw://bcfc0b3d59a5de3210eb218f05df05e053c1cb89cc08e4afce1f46c22afb10e9",
          "dweb:/ipfs/QmbVEQJkJnA2NSBVhUF6W97adH8di56FvkHDrbv4Z7nMWX"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xc250e493770feaa0da8e5a55d241712c1c6526caa7d8df2455c3e5fa25124c0b",
        "urls": [
          "bzz-raw://768e47d9ddeb15daeab0c8c1109ae43a4c2a0633bd9e4bf141488dfc9252f7ba",
          "dweb:/ipfs/QmWMTTRTncar9LptrxU7WK7WG5hHp8KsYnBGfm3cYowuP8"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC165Internal.sol": {
        "keccak256": "0xc15863a59c442e22b3f5de4e3fa79fffd45dcbe66a9fc18c52b1114c8420e177",
        "urls": [
          "bzz-raw://d81471f1ba8fbb03ce54b3e10478c858cb59cc8557530f326d0e63af122a9039",
          "dweb:/ipfs/QmTfG89JXeWNio2JtL6RpUrX2KZPRa3gAy5KFDU4xk3nMR"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xb6cf9a675a98c26431c526340e999f383e90f3c32565b4e4199d0c76dc363f09",
        "urls": [
          "bzz-raw://9d9a70aea2844cc64f058505423439b176da57e88da7bb645c51782914cb0ea7",
          "dweb:/ipfs/QmWNXFwui4ptTUTD5MY45xP1F3ph4vCLjPRFxsXYDrXz8K"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/interfaces/IERC20Internal.sol": {
        "keccak256": "0x5dc63954123c58280a48da71f91c435dd7373f56bd472867c80177359c885e53",
        "urls": [
          "bzz-raw://13af2862e67594093fce8a06db08b755e877c052dfaf34c6d46cd50bc2e3df6b",
          "dweb:/ipfs/QmTp5qgwFNNKk8T7whiZ8LTFMhYL8ztCKhNFfsRr7FS2H8"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165Base.sol": {
        "keccak256": "0x3f2268856fdd9b27946adc65010bc83992069a90034bf692ab630802a926a9c2",
        "urls": [
          "bzz-raw://c8f4aa0a9d369054fa3241abbf4a937eff32e42f7984ec2c11efe84b3536bdfd",
          "dweb:/ipfs/QmdL9cjvBLa5yszgCdxsqoh5BMYj6tJ2YWKPfLcRSzkA9c"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
        "keccak256": "0xba7b4d73d42dfc9f8083ce36aed0fa2c56c73878d8bda7d64f2fb908d5e04636",
        "urls": [
          "bzz-raw://08a4de8e6995d749ecd7f8c4c60a7e242e21cf9d44821fa270566eb3d7ed678d",
          "dweb:/ipfs/QmPNgKhBsv7PieDUR8Jvb4LkC57zt82jguw8QmuJ3J4UBG"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
        "keccak256": "0xfd1cfba40f8aabda5898ffe21adeeea8c7011da12bfdad7f7aa0cf87b3635653",
        "urls": [
          "bzz-raw://6b80596a94faae265ecd9e03875ccebf5c1e45d94d8119dcf04e3a1cd92f5fb6",
          "dweb:/ipfs/QmVK8xje6PeEwVoZfFcugAdy43kLx59D9UHr4m8Qu9GgV9"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/IERC165Base.sol": {
        "keccak256": "0x288c50013c735cf30be90eb084589fc54bc0ee77a88ec69c3cc1efb11d7dccf4",
        "urls": [
          "bzz-raw://857c5836ad7808d13a87afa482af6ef2adbb26616767b2dd558b33ccb9569a28",
          "dweb:/ipfs/QmdptfxicGQUfsXFHpTW1y8NDV6k6oCuk5r9UqgGuv49Tk"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
        "keccak256": "0xccda4b118c8c09c276a0e577168aa404ea6207aad6b384b04f5f3a8923316422",
        "urls": [
          "bzz-raw://dcbafa161920a2a39ac001c76ee166ae4b345bef3ee6a0c5ca505504c0e9c052",
          "dweb:/ipfs/QmTF3DPJQPLsiYTmGNZXGBkmVRs14g2bUb1QJDH4ywwMq5"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/ISolidStateERC20.sol": {
        "keccak256": "0x4800d771e5606f791a7c2662802718a727c361aaf547df8e6e849165ef91e9df",
        "urls": [
          "bzz-raw://a470452a22d4e680b6c1bc50df9ff39ca8de006a475990d907cfd47ebef39f39",
          "dweb:/ipfs/QmS2c5s5zQcJ2yoGsNLDJNc1Ysf7wvw2eqrkzzE7G3zmQ2"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/SolidStateERC20.sol": {
        "keccak256": "0x458859f714ecda3776d03a87f3b26a60d871b201a4768a3d0422012e52e5415c",
        "urls": [
          "bzz-raw://d18a77b113d6dbd4687126866b63044ecea910e7b196e13e4f630d538644ad1e",
          "dweb:/ipfs/QmfBL1JdyMoqnyFm7QqPL5aBp8NRaGpMwGTYnjDuFzQBqS"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/base/ERC20Base.sol": {
        "keccak256": "0xcb2e91570331bccad1beb1f30cf8bb1d4300b4222b828306d2f1ea9d867b2ef3",
        "urls": [
          "bzz-raw://fe725306435e4d4625a8ac0fe65ad3ab5866db840d9e2706920e75b9d66035d9",
          "dweb:/ipfs/QmXgcYV1jHUfegU4bZ5w4KQMUge7EzX7fvMuKGKVDAaM6T"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/base/ERC20BaseInternal.sol": {
        "keccak256": "0x571018562f714dbca7adb396b214a87b8fca12278aa706bb2ff5cbc8f4e0e970",
        "urls": [
          "bzz-raw://8d864aa8ed0c828676695e7c4b791f3d56271557e67aeb87ffd4747839ef0adf",
          "dweb:/ipfs/QmbwjhaTtzmMCqe2nSumBKa3gdX1ioCuVGShgCGL652TA6"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/base/ERC20BaseStorage.sol": {
        "keccak256": "0x77c4f688fd58ae32a15d63103581c6a20466790f1e68b6b1db687e8707fee7b1",
        "urls": [
          "bzz-raw://afede5b919ee82ef8042426fd73c31d51029ef18175b104a31cab03bd0923e0f",
          "dweb:/ipfs/QmNuKg8NM6F44U5JQkkKifHGxznCt7JNMEECbknwDqzCpP"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/base/IERC20Base.sol": {
        "keccak256": "0x83fcb688381ff4fba9bc068d490d3f0fd83abd5e5ee46f24cfb18ae1906e071e",
        "urls": [
          "bzz-raw://7ae77357bd78adac42bf63a71f212ff6c2357c11880544ad9014fbc70f2969c9",
          "dweb:/ipfs/QmPfaceGNUFZkioeQnrKp4PWQeNnNCGtaojsfLfX2b4GeW"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/base/IERC20BaseInternal.sol": {
        "keccak256": "0xa9c47a0ad2ab7f043a283ff148a8e4cf61d98f05fbed8d9ce35f6a0a403cc17f",
        "urls": [
          "bzz-raw://90e5ca8a15f674bd8835b12428e21d6f4f85937a8c38c7df0f768f893ce77fa5",
          "dweb:/ipfs/QmYJmSst4DEXZoYPjuFTG5S7FpnCEXCDxDpQXwuz9dkMBE"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/extended/ERC20Extended.sol": {
        "keccak256": "0x8fc1235a301b4a1d794118c363a078f13f0ea5ffe6ab6b1cc7e7409980fa1619",
        "urls": [
          "bzz-raw://936316fe041a88f9a6e6bf6f942bff0a44c56bdbd3b3661564d43f459880b590",
          "dweb:/ipfs/QmSwVcNzh9mkzYhVtoXNnqDt4r9LM5Ah9Vi7Xrxbin2CpR"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/extended/ERC20ExtendedInternal.sol": {
        "keccak256": "0xd32ec9a244d7daf96059884e29acbd9cac4597885fc27db717d855a15769fb74",
        "urls": [
          "bzz-raw://1aab52a6f8213ab83535835aebded8bfd9c9c34d8976c7a4f2d631d893f0bd3f",
          "dweb:/ipfs/QmTywz2Jdid8fYqyJuwDRLDuBcQeeQuqmgQX3tkni35Wz1"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/extended/IERC20Extended.sol": {
        "keccak256": "0x2eaa3907a62acc5b79fcbc90773c458ed4fcb6885b92aea56598b62af51fbd9c",
        "urls": [
          "bzz-raw://1b0ac9aa52df0c430022151211d0da41341663517d56eba42df9984cccb862b1",
          "dweb:/ipfs/QmVipnZ51o3tDCEudurBaSXusWU4gCQ4qS7muvpBJuoYt5"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/extended/IERC20ExtendedInternal.sol": {
        "keccak256": "0x6fa7ab02fbac8389c99d4854ff7f6bf0de08459c167e5bbab15138b177b55de4",
        "urls": [
          "bzz-raw://808e16888d4b7ec51f19cf9bee6e957f229c20170ce5a4b79fd847a1f13cb38d",
          "dweb:/ipfs/QmdMzqqY2bxQMdooz1K4ueg7kBVD6GqUVcKYDFffk7ASJX"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/metadata/ERC20Metadata.sol": {
        "keccak256": "0x57b284c9dadfb1ace56b1db778cb72b922d60f228e0c4f90299c7392be004473",
        "urls": [
          "bzz-raw://212476d56fcb09c7bbdf7ba4e97cb1fb4c391e8bf7ed2ec67762ce3e58ff5671",
          "dweb:/ipfs/QmVDCWC9kRyQofrhhjptRSfW2fDmvBGN4mE3gsNV71qjXL"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/metadata/ERC20MetadataInternal.sol": {
        "keccak256": "0xa50e52d2ede659caaed611115b905facf0a11fd0ca4c5ae9b082ef563467eea3",
        "urls": [
          "bzz-raw://ede064c8e993dd9f76cf45699be38908065f468a5952bcd4306372fea7221089",
          "dweb:/ipfs/QmVVjsuq5UqxVHyqRYbkoyTSbUbGVth3GNa3GmdwE8LC4s"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/metadata/ERC20MetadataStorage.sol": {
        "keccak256": "0x457312afbbb64fe0c5dfcb524e2d1122c314d409bca20a5ea5ba7275decfa3a2",
        "urls": [
          "bzz-raw://4c9ae08ddc49684074ccdf14eb4e6d6b8b9a139555a490abfda2d9450d2d6fda",
          "dweb:/ipfs/QmXQpMusZcFrdVh8fAa3F8KRcxgmPPH52XWY9C989kyyXm"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/metadata/IERC20Metadata.sol": {
        "keccak256": "0x22eefd0dbd7637f41c8bfc3662a4b1ae6f084f27f26e34cc9bf124e0aee10a01",
        "urls": [
          "bzz-raw://ac459354c7e3ad54842b23ea469c0bd3464a95aa293f7fc09b34c590a356b1a6",
          "dweb:/ipfs/QmYvXnJq7pVrU3e18PbfahK9AwpSc1Yu2rHvsSJMXwKGZ1"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/metadata/IERC20MetadataInternal.sol": {
        "keccak256": "0x32464590a972a9325d20c7125d157594df9473b6496ce6a66df617c41c4039ec",
        "urls": [
          "bzz-raw://60159ad57e36fb414e79b3b9aa41ff0cdafa56585d104d67128d56e935635e01",
          "dweb:/ipfs/QmbBe4dh2zttkvqWyHn4QPj6yVpR14SWNTr4KiwSu37jk6"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/permit/ERC20Permit.sol": {
        "keccak256": "0xc643dedca17c9e43323def837213735d91e7a437abbb72b4de76d30a0083e8ef",
        "urls": [
          "bzz-raw://69b6189e4c3b2624d3d86c531113b3492f6d091fcfb4c3bc1065f00cc791a9bc",
          "dweb:/ipfs/QmdxahkhRHsUdCA7GwkSc1Mp2Bk9uCxZjwKwS6K4F855Xv"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/permit/ERC20PermitInternal.sol": {
        "keccak256": "0xa594b27e8f5ac45f5ccb3ad66f6f5cb9104e97425293716b8ce66395f4359d6f",
        "urls": [
          "bzz-raw://ecddc3d20c3564389069cb788d529bb7cc9e3904e443f66f6634e481aea7fe3d",
          "dweb:/ipfs/QmWDbsq7qJv5y7S6j9o6EvmhZRBDqu6ZRLziSHT28j5LU8"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/permit/ERC20PermitStorage.sol": {
        "keccak256": "0x246e6651fcc1b9664bb689addca3c3122053affdf672037cab6ac1a5bcc1334a",
        "urls": [
          "bzz-raw://a6ef01b1b7efd7ec2a08a890a094488ad93f923dddf4b00bf0ed46f9e5d6d954",
          "dweb:/ipfs/QmVPzokENA8yfgqDvWpB1PZ8et1LTZoM1Ubt5ZGPG9kER1"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/permit/IERC20Permit.sol": {
        "keccak256": "0x4b906e3eab76bf0e4e3b96987f989f9e2350f70f775b2773ae84ffcf40816f0c",
        "urls": [
          "bzz-raw://97a30f1be8cf8d85fb23ca9e2f83a79d7499b0549afa74832801afb42e8d9f87",
          "dweb:/ipfs/QmR5Tu1fY75HAFTuoJ2AFvs7TpcupoEguJLKhMGmrSRjKK"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/permit/IERC20PermitInternal.sol": {
        "keccak256": "0x4f6e12f9e07cc66ca9ee57a25c40d9d2f55d3e800a3d6577c9d883068423eb22",
        "urls": [
          "bzz-raw://e8d626e9f9527fda26f30d811007fd087a4fd520ca56ab3f7821d22298981faf",
          "dweb:/ipfs/QmZCouA4wmAJP9bFvTjF9gnJiEAn7wYTr7GypkP2i6HsXL"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/permit/IERC2612.sol": {
        "keccak256": "0x449c45997514a8ebf30c7cd7a27778ce6fd6f7dac27c9505fd8a4f093f396e92",
        "urls": [
          "bzz-raw://1ad30720570447afbaa87e2b40158884fa859162f779022ff01a90bd61eadae7",
          "dweb:/ipfs/Qmc2PZQQsEuWwMz9WXXAnexDaxAf5jWJj5irGgrEEuNM1P"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/token/ERC20/permit/IERC2612Internal.sol": {
        "keccak256": "0xdca4b94537ab13936677c889a29267e506f2f23da6f5f541f73a95e2db5b4db9",
        "urls": [
          "bzz-raw://b59db5b753c269d10c4d71e375384c8612f477679715afe8b35ba6e4d4f67f1d",
          "dweb:/ipfs/QmUk4McXaQeFVZ3b4XsLJsWEdoKdxTLGSFQDi2Qe54oy6z"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/IMulticall.sol": {
        "keccak256": "0x39e630bc189607ae119c1208a632009fe418cc4eb2687b28e7fdbe78af7b79b0",
        "urls": [
          "bzz-raw://5afde99ff69a2e02fb24b6895b629de612547643dc119d01bf9937cad5452e0b",
          "dweb:/ipfs/QmR9WDSqAeNxRnju4XBUsRmN6TdgoATp9hcoC1kSDnVuZX"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/Multicall.sol": {
        "keccak256": "0x762f15ac4c28be19d0d7fb303ade8dea6ba52ff558fb6fba36df84a839e216b3",
        "urls": [
          "bzz-raw://394c7fbb2b8e6d62b6e9e78124ef327a59c3d5fec21119fee2c153e2517e2986",
          "dweb:/ipfs/QmdDuVFLAxEPqjtBfWTeXhov6Nzjh7eG35YZsricP5jQkw"
        ],
        "license": "MIT"
      },
      "lib/solidstate-solidity/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "src/extensions/contractMetadata/ContractMetadata.sol": {
        "keccak256": "0xf9b1229a45909e915ef12af800328118db1c595aaef67a20e1acd725684f2168",
        "urls": [
          "bzz-raw://46633691888096232cdb06918b2944eafa4d49495e2306fc2e28884e9a917b89",
          "dweb:/ipfs/QmS9sAeRDzWy9rMyd7z8Q5BWT76kgYEEzVpp2dgHr5p5yj"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/contractMetadata/ContractMetadataInternal.sol": {
        "keccak256": "0xb0b663565bdd0c13bdf9181a7f2a91b672edddb7ac735105879112c8a8f86bcd",
        "urls": [
          "bzz-raw://129467e2b99b2c144974ceb5460dc02c551d374ba13cc6cc95622768bce063a9",
          "dweb:/ipfs/QmVtwsf6DCZh5HKKuBpJJM3XMTzv5jMwKZzBLKtoU3xjGj"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/contractMetadata/ContractMetadataStorage.sol": {
        "keccak256": "0x1dfebbe2c62ea8f7548e3c650ffb9d50965c3cb034bd9cbdd0b2369f125ad71b",
        "urls": [
          "bzz-raw://2d3f4c69ca9d056696e3dd8da7228624b069f8f72f639d5757d76f09eab32c9e",
          "dweb:/ipfs/QmRkgANNs7yi6HetVWvwU3GL3JCoYA5q3rVNUxLVGEpqjN"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/contractMetadata/IContractMetadata.sol": {
        "keccak256": "0xd5be120bf459578ea89d8bd8b2bc16b14d20e9b5428b7abefd633c627b193923",
        "urls": [
          "bzz-raw://f968d3038523f935e9ccc51bd107daacee352bfd0274e92ab77c6d0a1031dd12",
          "dweb:/ipfs/QmWLQZJG13uhcd6wDPLogNsfnMc9oTzP4UKvQiJ8RH3Mq5"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/initializable/IInitializable.sol": {
        "keccak256": "0x42f99a0bd1167708a004557d628a1253c4b1d26221df63440a66c36e4830570b",
        "urls": [
          "bzz-raw://07594e13830bd6066fcd3d185db90e34f2301ff58b591467d0e53394dd6a5024",
          "dweb:/ipfs/QmagYyu76ciX5qTfhkBsN2pxWAuGwZzyaGq9Co2ckTDQo1"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/initializable/Initializable.sol": {
        "keccak256": "0xa7f78f30f008e91b687547da51aa25a448679790d06cc1f10c3261eb45d853c5",
        "urls": [
          "bzz-raw://959d4eea66aac4e4933b4d9f4fc723d2e48aa6bd12263fdd15acf95d67f7189a",
          "dweb:/ipfs/QmQApqrfc48qCBpA3GvsyXoJ1cXbPweJXCYW9BEyd5rwmN"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/initializable/InitializableInternal.sol": {
        "keccak256": "0x20671afc6467e08b98449566ad7bab706e0058099c9305ab21891db888a75c33",
        "urls": [
          "bzz-raw://4d954c6ea53c6b06a50d950248fd462c20a33f4dac5f13d2f376d3dc3c54e0d7",
          "dweb:/ipfs/QmdGEWCcXCZBx1ZGSyjSGWciBB4eWkEYvRUemJsZVrzm3Y"
        ],
        "license": "UNLICENSED"
      },
      "src/extensions/initializable/InitializableStorage.sol": {
        "keccak256": "0xd8046543dd0f739fa24a669e9a4d3cc3d50f4b42ca549e64bfdb634358217feb",
        "urls": [
          "bzz-raw://1a1b059ae584fc07d8e09495ce1d6be84a26753090d37b6cd71b41fcc5f299f3",
          "dweb:/ipfs/QmPuKFQtc9wtrntisCuBfXeAg9oc7hyp5A3mPZGvAph6S1"
        ],
        "license": "UNLICENSED"
      },
      "src/tokens/ERC20/ERC20Base.sol": {
        "keccak256": "0xb336dd00f660d7f94f27d7f84da449d6fff9aff8ed71d8c175b9f81f1f0b3391",
        "urls": [
          "bzz-raw://1edc15412bae052d3cc789ea0e85616194f1ef3c8f9425e0680cb4a47cec2b18",
          "dweb:/ipfs/QmS7JJFPw4itYmtbb2GtPY2AuaSTuvNyaR4ttpP9cMtD6r"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/tokens/ERC20/ERC20Base.sol",
    "id": 38011,
    "exportedSymbols": {
      "ContractMetadata": [35419],
      "ERC165Base": [29669],
      "ERC20Base": [38010],
      "IContractMetadata": [35520],
      "IERC165": [29370],
      "IERC20": [29470],
      "IERC2612": [33155],
      "Initializable": [35896],
      "Multicall": [33475],
      "Ownable": [28775],
      "SolidStateERC20": [31839]
    },
    "nodeType": "SourceUnit",
    "src": "39:3934:155",
    "nodes": [
      {
        "id": 37830,
        "nodeType": "PragmaDirective",
        "src": "39:24:155",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".16"]
      },
      {
        "id": 37832,
        "nodeType": "ImportDirective",
        "src": "65:67:155",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/interfaces/IERC20.sol",
        "file": "@solidstate/contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 29471,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37831,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29470,
              "src": "73:6:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37834,
        "nodeType": "ImportDirective",
        "src": "134:86:155",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/token/ERC20/SolidStateERC20.sol",
        "file": "@solidstate/contracts/token/ERC20/SolidStateERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 31840,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37833,
              "name": "SolidStateERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31839,
              "src": "142:15:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37836,
        "nodeType": "ImportDirective",
        "src": "221:79:155",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/token/ERC20/permit/IERC2612.sol",
        "file": "@solidstate/contracts/token/ERC20/permit/IERC2612.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 33156,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37835,
              "name": "IERC2612",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33155,
              "src": "229:8:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37838,
        "nodeType": "ImportDirective",
        "src": "302:90:155",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/introspection/ERC165/base/ERC165Base.sol",
        "file": "@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 29670,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37837,
              "name": "ERC165Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29669,
              "src": "310:10:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37840,
        "nodeType": "ImportDirective",
        "src": "393:69:155",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/interfaces/IERC165.sol",
        "file": "@solidstate/contracts/interfaces/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 29371,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37839,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29370,
              "src": "401:7:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37842,
        "nodeType": "ImportDirective",
        "src": "464:73:155",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/access/ownable/Ownable.sol",
        "file": "@solidstate/contracts/access/ownable/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 28776,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37841,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28775,
              "src": "472:7:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37844,
        "nodeType": "ImportDirective",
        "src": "538:68:155",
        "nodes": [],
        "absolutePath": "lib/solidstate-solidity/contracts/utils/Multicall.sol",
        "file": "@solidstate/contracts/utils/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 33476,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37843,
              "name": "Multicall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33475,
              "src": "546:9:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37847,
        "nodeType": "ImportDirective",
        "src": "607:102:155",
        "nodes": [],
        "absolutePath": "src/extensions/contractMetadata/ContractMetadata.sol",
        "file": "@extensions/contractMetadata/ContractMetadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 35420,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37845,
              "name": "ContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35419,
              "src": "615:16:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 37846,
              "name": "IContractMetadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35520,
              "src": "633:17:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37849,
        "nodeType": "ImportDirective",
        "src": "710:74:155",
        "nodes": [],
        "absolutePath": "src/extensions/initializable/Initializable.sol",
        "file": "@extensions/initializable/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38011,
        "sourceUnit": 35897,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37848,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35896,
              "src": "718:13:155",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 38010,
        "nodeType": "ContractDefinition",
        "src": "1573:2399:155",
        "nodes": [
          {
            "id": 37932,
            "nodeType": "FunctionDefinition",
            "src": "1682:577:155",
            "nodes": [],
            "body": {
              "id": 37931,
              "nodeType": "Block",
              "src": "1834:425:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37878,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37864,
                        "src": "1854:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37877,
                      "name": "_setOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28898,
                      "src": "1844:9:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:17:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37880,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:17:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37882,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37866,
                        "src": "1881:5:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 37881,
                      "name": "_setName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32686,
                      "src": "1872:8:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 37883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1872:15:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37884,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:15:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37886,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37868,
                        "src": "1908:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 37885,
                      "name": "_setSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32700,
                      "src": "1897:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 37887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:19:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37888,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:19:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37890,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37870,
                        "src": "1939:9:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 37889,
                      "name": "_setDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32714,
                      "src": "1926:12:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 37891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:23:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37892,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:23:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37894,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1966:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1970:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1966:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37896,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37872,
                        "src": "1978:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37893,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32153,
                      "src": "1960:5:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1960:25:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37898,
                  "nodeType": "ExpressionStatement",
                  "src": "1960:25:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37901,
                              "name": "IERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29370,
                              "src": "2023:7:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$29370_$",
                                "typeString": "type(contract IERC165)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC165_$29370_$",
                                "typeString": "type(contract IERC165)"
                              }
                            ],
                            "id": 37900,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2018:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2018:13:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$29370",
                            "typeString": "type(contract IERC165)"
                          }
                        },
                        "id": 37903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2032:11:155",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2018:25:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 37904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2045:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37899,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29720,
                      "src": "1996:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 37905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:54:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37906,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:54:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37909,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29470,
                              "src": "2087:6:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$29470_$",
                                "typeString": "type(contract IERC20)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$29470_$",
                                "typeString": "type(contract IERC20)"
                              }
                            ],
                            "id": 37908,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2082:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2082:12:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20_$29470",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 37911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2095:11:155",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2082:24:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 37912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2108:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37907,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29720,
                      "src": "2060:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 37913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:53:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37914,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:53:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37917,
                              "name": "IERC2612",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33155,
                              "src": "2150:8:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC2612_$33155_$",
                                "typeString": "type(contract IERC2612)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC2612_$33155_$",
                                "typeString": "type(contract IERC2612)"
                              }
                            ],
                            "id": 37916,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2145:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2145:14:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC2612_$33155",
                            "typeString": "type(contract IERC2612)"
                          }
                        },
                        "id": 37919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2160:11:155",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2145:26:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 37920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2173:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37915,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29720,
                      "src": "2123:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 37921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2123:55:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37922,
                  "nodeType": "ExpressionStatement",
                  "src": "2123:55:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 37925,
                              "name": "IContractMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35520,
                              "src": "2215:17:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IContractMetadata_$35520_$",
                                "typeString": "type(contract IContractMetadata)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IContractMetadata_$35520_$",
                                "typeString": "type(contract IContractMetadata)"
                              }
                            ],
                            "id": 37924,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2210:4:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 37926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2210:23:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IContractMetadata_$35520",
                            "typeString": "type(contract IContractMetadata)"
                          }
                        },
                        "id": 37927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2234:11:155",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2210:35:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 37928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2247:4:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37923,
                      "name": "_setSupportsInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29720,
                      "src": "2188:21:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
                        "typeString": "function (bytes4,bool)"
                      }
                    },
                    "id": 37929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2188:64:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37930,
                  "nodeType": "ExpressionStatement",
                  "src": "2188:64:155"
                }
              ]
            },
            "functionSelector": "d72bdc53",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37875,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37874,
                  "name": "initializer",
                  "nameLocations": ["1818:11:155"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35849,
                  "src": "1818:11:155"
                },
                "nodeType": "ModifierInvocation",
                "src": "1818:11:155"
              }
            ],
            "name": "initialize",
            "nameLocation": "1691:10:155",
            "parameters": {
              "id": 37873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37864,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1710:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37932,
                  "src": "1702:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37866,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1732:5:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37932,
                  "src": "1718:19:155",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37865,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37868,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1753:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37932,
                  "src": "1739:21:155",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37867,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:6:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37870,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "1768:9:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37932,
                  "src": "1762:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 37869,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:5:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37872,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "1787:6:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37932,
                  "src": "1779:14:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1779:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:93:155"
            },
            "returnParameters": {
              "id": 37876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:155"
            },
            "scope": 38010,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37959,
            "nodeType": "FunctionDefinition",
            "src": "2784:209:155",
            "nodes": [],
            "body": {
              "id": 37958,
              "nodeType": "Block",
              "src": "2845:148:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 37941,
                          "name": "_canMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37995,
                          "src": "2863:8:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 37942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2863:10:155",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f206d696e742e",
                        "id": 37943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2875:25:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        },
                        "value": "Not authorized to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19fa12bcfa7d6a1607ff6d71275840261c73292c97fc8050f5d1b6b6df578e14",
                          "typeString": "literal_string \"Not authorized to mint.\""
                        }
                      ],
                      "id": 37940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2855:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:46:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37945,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:46:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37947,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37937,
                          "src": "2919:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 37948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2930:1:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2919:12:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74696e67207a65726f20746f6b656e732e",
                        "id": 37950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2933:22:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        },
                        "value": "Minting zero tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7acedc89dd3658da26d0488f7e55737f51bdbd8424532db0708cd962cbb1712b",
                          "typeString": "literal_string \"Minting zero tokens.\""
                        }
                      ],
                      "id": 37946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "2911:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2911:45:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37952,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:45:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37954,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37935,
                        "src": "2973:3:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37955,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37937,
                        "src": "2978:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37953,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32153,
                      "src": "2967:5:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2967:19:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37957,
                  "nodeType": "ExpressionStatement",
                  "src": "2967:19:155"
                }
              ]
            },
            "documentation": {
              "id": 37933,
              "nodeType": "StructuredDocumentation",
              "src": "2444:335:155",
              "text": "  @notice          Lets an authorized address mint tokens to a recipient.\n  @dev             The logic in the `_canMint` function determines whether the caller is authorized to mint tokens.\n  @param _to       The recipient of the tokens to mint.\n  @param _amount   Quantity of tokens to mint."
            },
            "functionSelector": "449a52f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "2793:6:155",
            "parameters": {
              "id": 37938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37935,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2808:3:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37959,
                  "src": "2800:11:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2800:7:155",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37937,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2821:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37959,
                  "src": "2813:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2813:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2799:30:155"
            },
            "returnParameters": {
              "id": 37939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2845:0:155"
            },
            "scope": 38010,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 37982,
            "nodeType": "FunctionDefinition",
            "src": "3216:165:155",
            "nodes": [],
            "body": {
              "id": 37981,
              "nodeType": "Block",
              "src": "3264:117:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 37967,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3293:3:155",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 37968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3297:6:155",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3293:10:155",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 37966,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31986,
                            "src": "3282:10:155",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 37969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3282:22:155",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 37970,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37962,
                          "src": "3308:7:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3282:33:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f7567682062616c616e6365",
                        "id": 37972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3317:20:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        },
                        "value": "not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_596712763af5ad819c1a1c8db05ac93e50918d28937626717ff5e1d919b4454a",
                          "typeString": "literal_string \"not enough balance\""
                        }
                      ],
                      "id": 37965,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "3274:7:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:64:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37974,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:64:155"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37976,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3354:3:155",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3358:6:155",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3354:10:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 37978,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37962,
                        "src": "3366:7:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37975,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32230,
                      "src": "3348:5:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 37979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3348:26:155",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37980,
                  "nodeType": "ExpressionStatement",
                  "src": "3348:26:155"
                }
              ]
            },
            "documentation": {
              "id": 37960,
              "nodeType": "StructuredDocumentation",
              "src": "2999:212:155",
              "text": "  @notice          Lets an owner a given amount of their tokens.\n  @dev             Caller should own the `_amount` of tokens.\n  @param _amount   The number of tokens to burn."
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "3225:4:155",
            "parameters": {
              "id": 37963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37962,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3238:7:155",
                  "nodeType": "VariableDeclaration",
                  "scope": 37982,
                  "src": "3230:15:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3230:7:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3229:17:155"
            },
            "returnParameters": {
              "id": 37964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3264:0:155"
            },
            "scope": 38010,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 37995,
            "nodeType": "FunctionDefinition",
            "src": "3662:102:155",
            "nodes": [],
            "body": {
              "id": 37994,
              "nodeType": "Block",
              "src": "3719:45:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 37992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 37988,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3736:3:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 37989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3740:6:155",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3736:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37990,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28761,
                        "src": "3750:5:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 37991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3750:7:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3736:21:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 37987,
                  "id": 37993,
                  "nodeType": "Return",
                  "src": "3729:28:155"
                }
              ]
            },
            "documentation": {
              "id": 37983,
              "nodeType": "StructuredDocumentation",
              "src": "3580:77:155",
              "text": "@dev Returns whether tokens can be minted in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canMint",
            "nameLocation": "3671:8:155",
            "parameters": {
              "id": 37984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3679:2:155"
            },
            "returnParameters": {
              "id": 37987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37995,
                  "src": "3713:4:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37985,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3713:4:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3712:6:155"
            },
            "scope": 38010,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 38009,
            "nodeType": "FunctionDefinition",
            "src": "3848:122:155",
            "nodes": [],
            "body": {
              "id": 38008,
              "nodeType": "Block",
              "src": "3924:46:155",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 38006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 38002,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3941:3:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 38003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3945:6:155",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3941:10:155",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 38004,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28827,
                        "src": "3955:6:155",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 38005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3955:8:155",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3941:22:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 38001,
                  "id": 38007,
                  "nodeType": "Return",
                  "src": "3934:29:155"
                }
              ]
            },
            "baseFunctions": [35418],
            "documentation": {
              "id": 37996,
              "nodeType": "StructuredDocumentation",
              "src": "3770:73:155",
              "text": "@dev Returns whether owner can be set in the given execution context."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canSetContractURI",
            "nameLocation": "3857:18:155",
            "overrides": {
              "id": 37998,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3900:8:155"
            },
            "parameters": {
              "id": 37997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3875:2:155"
            },
            "returnParameters": {
              "id": 38001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38009,
                  "src": "3918:4:155",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37999,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3918:4:155",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3917:6:155"
            },
            "scope": 38010,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37851,
              "name": "SolidStateERC20",
              "nameLocations": ["1595:15:155"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31839,
              "src": "1595:15:155"
            },
            "id": 37852,
            "nodeType": "InheritanceSpecifier",
            "src": "1595:15:155"
          },
          {
            "baseName": {
              "id": 37853,
              "name": "Ownable",
              "nameLocations": ["1612:7:155"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28775,
              "src": "1612:7:155"
            },
            "id": 37854,
            "nodeType": "InheritanceSpecifier",
            "src": "1612:7:155"
          },
          {
            "baseName": {
              "id": 37855,
              "name": "Multicall",
              "nameLocations": ["1621:9:155"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33475,
              "src": "1621:9:155"
            },
            "id": 37856,
            "nodeType": "InheritanceSpecifier",
            "src": "1621:9:155"
          },
          {
            "baseName": {
              "id": 37857,
              "name": "ContractMetadata",
              "nameLocations": ["1632:16:155"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35419,
              "src": "1632:16:155"
            },
            "id": 37858,
            "nodeType": "InheritanceSpecifier",
            "src": "1632:16:155"
          },
          {
            "baseName": {
              "id": 37859,
              "name": "Initializable",
              "nameLocations": ["1650:13:155"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35896,
              "src": "1650:13:155"
            },
            "id": 37860,
            "nodeType": "InheritanceSpecifier",
            "src": "1650:13:155"
          },
          {
            "baseName": {
              "id": 37861,
              "name": "ERC165Base",
              "nameLocations": ["1665:10:155"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29669,
              "src": "1665:10:155"
            },
            "id": 37862,
            "nodeType": "InheritanceSpecifier",
            "src": "1665:10:155"
          }
        ],
        "canonicalName": "ERC20Base",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37850,
          "nodeType": "StructuredDocumentation",
          "src": "786:785:155",
          "text": "  @dev Thirdweb inspired ERC20Base contract using solidstates ERC20 contract and diamond storage throughout.\n       has the edition of ERC165\n  The `ERC20Base` smart contract implements the ERC20 standard.\n  It includes the following additions to standard ERC20 logic:\n      - Ability to mint & burn tokens via the provided `mintTo` & `burn` functions.\n      - Ownership of the contract, with the ability to restrict certain functions to\n        only be called by the contract's owner.\n      - Multicall capability to perform multiple actions atomically\n      - EIP 2612 compliance: See {ERC20-permit} method, which can be used to change an account's ERC20 allowance by\n                             presenting a message signed by the account."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38010, 29669, 29721, 29757, 29766, 29370, 29376, 35896, 36006, 35777,
          35419, 35473, 35520, 33475, 33407, 28775, 28899, 28712, 28701, 29396,
          29406, 31839, 32844, 33062, 32627, 32474, 32545, 31949, 31815, 33104,
          33155, 33115, 33158, 32715, 32768, 32772, 32573, 32585, 32359, 32404,
          29470, 32430, 29490
        ],
        "name": "ERC20Base",
        "nameLocation": "1582:9:155",
        "scope": 38011,
        "usedErrors": [
          28709, 28711, 29073, 29075, 29079, 29765, 32413, 32415, 32417, 32419,
          32421, 32423, 32425, 32427, 32429, 32582, 32584, 33112, 33114
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 155
}
